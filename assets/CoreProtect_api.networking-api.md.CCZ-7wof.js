import{_ as i,c as a,o as t,b0 as e}from"./chunks/framework.w6NQj85O.js";const o=JSON.parse('{"title":"网络通信 API","description":"","frontmatter":{},"headers":[],"relativePath":"CoreProtect/api.networking-api.md","filePath":"CoreProtect/api.networking-api.md"}'),n={name:"CoreProtect/api.networking-api.md"};function d(h,s,l,k,p,r){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="网络通信-api" tabindex="-1">网络通信 API <a class="header-anchor" href="#网络通信-api" aria-label="Permalink to &quot;网络通信 API&quot;">​</a></h1><p>CoreProtect 网络通信 API 允许客户端通过包获取数据。</p><table tabindex="0"><thead><tr><th>网络通信细节</th><th></th></tr></thead><tbody><tr><td>网络通信版本：</td><td>1</td></tr><tr><td>插件版本：</td><td>v21.3+</td></tr></tbody></table><h2 id="包" tabindex="-1">包 <a class="header-anchor" href="#包" aria-label="Permalink to &quot;包&quot;">​</a></h2><p>服务器只在玩家有 <code>coreprotect.networking</code> 权限时进行响应。</p><h2 id="服务端至客户端" tabindex="-1">服务端至客户端 <a class="header-anchor" href="#服务端至客户端" aria-label="Permalink to &quot;服务端至客户端&quot;">​</a></h2><h3 id="数据包" tabindex="-1">数据包 <a class="header-anchor" href="#数据包" aria-label="Permalink to &quot;数据包&quot;">​</a></h3><p>从数据库中读取并发送数据。</p><ul><li>频道：<code>coreprotect:data</code></li></ul><table tabindex="0"><thead><tr><th>类型：<code>Int</code></th><th>1</th><th>2</th><th>3</th><th>4</th></tr></thead><tbody><tr><td></td><td>时间：<code>long</code></td><td>时间：<code>long</code></td><td>时间：<code>long</code></td><td>时间：<code>long</code></td></tr><tr><td></td><td>阶段选择器：<code>UTF</code></td><td>阶段选择器：<code>UTF</code></td><td>返回玩家：<code>UTF</code></td><td>返回玩家：<code>UTF</code></td></tr><tr><td></td><td>返回玩家：<code>UTF</code></td><td>返回玩家：<code>UTF</code></td><td>消息：<code>UTF</code></td><td>目标：<code>UTF</code></td></tr><tr><td></td><td>目标：<code>UTF</code></td><td>数量：<code>Int</code></td><td>签名：<code>Boolean</code></td><td></td></tr><tr><td></td><td>数量：<code>Int</code></td><td>X：<code>Int</code></td><td>X：<code>Int</code></td><td></td></tr><tr><td></td><td>Y：<code>Int</code></td><td>Z：<code>Int</code></td><td>Z：<code>Int</code></td><td></td></tr><tr><td></td><td>Z：<code>Int</code></td><td>世界名称：<code>UTF</code></td><td>世界名称：<code>UTF</code></td><td></td></tr><tr><td></td><td>世界名称：<code>UTF</code></td><td></td><td></td><td></td></tr><tr><td></td><td>是否回滚：<code>Boolean</code></td><td></td><td></td><td></td></tr><tr><td></td><td>是否为容器：<code>Boolean</code></td><td></td><td></td><td></td></tr><tr><td></td><td>是否追加：<code>Boolean</code></td><td></td><td></td><td></td></tr></tbody></table><p>示例（Fabric）：</p><div class="language-JavaScript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ByteArrayInputStream </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ByteArrayInputStream</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(buf.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getWrittenBytes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DataInputStream dis </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DataInputStream</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">int type </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dis.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">readInt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">long time </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dis.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">readLong</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">String selector </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dis.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">readUTF</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">String  resultUser </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dis.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">readUTF</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">String target </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dis.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">readUTF</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">int amount </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dis.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">readInt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">int x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dis.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">readInt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">int y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dis.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">readInt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">int z </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dis.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">readInt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">String worldName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dis.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">readUTF</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">boolean rolledback </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dis.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">readBoolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">boolean isContainer </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dis.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">readBoolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">boolean added </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dis.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">readBoolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h3 id="握手包" tabindex="-1">握手包 <a class="header-anchor" href="#握手包" aria-label="Permalink to &quot;握手包&quot;">​</a></h3><p>在玩家注册后发送握手请求。</p><ul><li>频道：<code>coreprotect:handshake</code></li><li>是否注册：<code>Boolean</code></li></ul><h2 id="客户端至服务端" tabindex="-1">客户端至服务端 <a class="header-anchor" href="#客户端至服务端" aria-label="Permalink to &quot;客户端至服务端&quot;">​</a></h2><h3 id="握手包-1" tabindex="-1">握手包 <a class="header-anchor" href="#握手包-1" aria-label="Permalink to &quot;握手包&quot;">​</a></h3><p>发送握手请求以注册。</p><ul><li>频道：<code>coreprotect:handshake</code></li><li>模组版本：<code>UTF</code></li><li>模组 ID：<code>UTF</code></li><li>CoreProtect 协议：<code>Int</code></li></ul><p>示例（Fabric）：</p><div class="language-JavaScript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">JavaScript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PacketByteBuf packetByteBuf </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PacketByteBuf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Unpooled.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">buffer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ByteArrayOutputStream msgBytes </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ByteArrayOutputStream</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DataOutputStream msgOut </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DataOutputStream</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(msgBytes);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">msgOut.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">writeUTF</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(modVersion);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">msgOut.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">writeUTF</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(modId);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">msgOut.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">writeInt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(coreprotectProtocol);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">packetByteBuf.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">writeBytes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(msgBytes.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toByteArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span></code></pre></div><h2 id="调试" tabindex="-1">调试 <a class="header-anchor" href="#调试" aria-label="Permalink to &quot;调试&quot;">​</a></h2><h3 id="co-network-debug" tabindex="-1">/co network-debug <a class="header-anchor" href="#co-network-debug" aria-label="Permalink to &quot;/co network-debug&quot;">​</a></h3><p>允许在你注册且拥有对应权限的情况下对网络通信 API 进行调试。</p><p>若要使用这个命令，必须先在 CoreProtect 的 <code>config.yml</code> 中将 <code>network-debug</code> 设置为 <code>true</code>。</p><h4 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h4><p><code>/co network-debug &lt;类型&gt;</code></p>`,27)]))}const c=i(n,[["render",d]]);export{o as __pageData,c as default};
