import{_ as i,c as a,o as n,b0 as e}from"./chunks/framework.w6NQj85O.js";const o=JSON.parse('{"title":"展示实体家具","description":"","frontmatter":{},"headers":[],"relativePath":"Oraxen/mechanics.furniture-mechanic.display-entity-furniture.md","filePath":"Oraxen/mechanics.furniture-mechanic.display-entity-furniture.md"}'),p={name:"Oraxen/mechanics.furniture-mechanic.display-entity-furniture.md"};function t(l,s,h,k,d,c){return n(),a("div",null,s[0]||(s[0]=[e(`<h1 id="展示实体家具" tabindex="-1">展示实体家具 <a class="header-anchor" href="#展示实体家具" aria-label="Permalink to &quot;展示实体家具&quot;">​</a></h1><div class="info custom-block"><p class="custom-block-title">提示</p><p>本章提及的内容仅适用于 1.19.4 或更高版本的服务器。</p><p>展示实体家具仅会对 1.19.4 以上的玩家显示。</p><p>ViaVersion 不会修复这个问题。</p><p>除此之外，Oraxen 版本也必须高于 1.154.0。</p></div><div class="info custom-block"><p class="custom-block-title">提示</p><p>不建议修改旧家具配置。</p><p>已经放置的物品展示框家具不会自动更新，且如果配置改动，则它们有可能损坏。</p><p>如果你想要修改配置，你应当移除家具再将其放置。</p><p>在未来，我们可能会制作一个命令、系统或插件拓展，以让旧家具能够被迁移至展示实体/新配置。</p></div><p>展示实体是一种 1.19.4 引入的新实体。</p><p>它有三种类型：物品、方块与交互。</p><p>Oraxen 利用了物品展示实体与交互实体来实现家具的功能。</p><p>在这些实体的帮助下，你可以轻松做到以前不能做到的事。</p><p>除了更多选项之外，它不会被削除渲染，意味着不会像之前那样在某个角度观察时突然消失。</p><p>虽然这有可能导致玩家客户端帧数变低，但至少家具不会隐形了。</p><p>下文为示例配置：</p><div class="language-YAML vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">YAML</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">cart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  displayname</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&lt;gray&gt;推车&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  material</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">PAPER</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  Mechanics</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    furniture</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">DISPLAY_ENTITY</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      hitbox</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.4</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.3</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      display_entity_properties</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        display_transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">NONE</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        brightness</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          block_light</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">15</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          sky_light</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      barrier</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  Pack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    generate_model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">default/cart</span></span></code></pre></div><h2 id="家具类型" tabindex="-1">家具类型 <a class="header-anchor" href="#家具类型" aria-label="Permalink to &quot;家具类型&quot;">​</a></h2><p>首先，<code>type</code> 是 Oraxen 1.154.0 以上版本添加的一种新属性。</p><p>它允许你自由选择使用旧版的展示框或是新的展示实体。</p><p>如果你的服务器允许低于 1.19.4 的玩家进入，我们推荐你保持使用前者。后者可能会导致这些玩家无法看见家具。</p><p>在未指定的情况下为 <code>ITEM_FRAME</code>。</p><p>可用选项为：<code>ITEM_FRAME</code>、<code>GLOW_ITEM_FRAME</code> 与 <code>DISPLAY_ENTITY</code>。</p><h2 id="碰撞箱" tabindex="-1">碰撞箱 <a class="header-anchor" href="#碰撞箱" aria-label="Permalink to &quot;碰撞箱&quot;">​</a></h2><p>碰撞箱是 Oraxen 1.154.0 之后增加的一种新属性。</p><p>这是基于新实体的相关设置。</p><p>这个实体没有碰撞箱，仅用于充当家具的碰撞箱。</p><p>它可以和旧的屏障机制一起使用。</p><p>它有 <code>width</code> 和 <code>height</code> 属性，可用于定义碰撞箱的大小。</p><h2 id="展示实体属性" tabindex="-1">展示实体属性 <a class="header-anchor" href="#展示实体属性" aria-label="Permalink to &quot;展示实体属性&quot;">​</a></h2><p>这部分会详细讲解新的实体带来的一些设置。</p><p>某些设置会比其他的更有用，但我还是将所有的设置都加了进来。</p><p>在 <code>display_entity_properties</code> 部分，你可以设置这些内容：</p><p><code>display_transform</code>、<code>tracking_rotation</code>、<code>brightness</code>、<code>view_range</code>、<code>shadow_radius</code>、<code>shadow_strenth</code>、<code>scale</code>。</p><p><code>display_transform</code> 决定了模型的展示方式。</p><p>默认为 <code>NONE</code>，即显示样式与 BlockBench 中显示的一样。</p><p>其他插件可能会使用盔甲架并将物品装备在它的头部，你可以将这个设置调整为 <code>HEAD</code>，以达到相同的效果。</p><p>这里还有几个额外选项：<code>FIRSTPERSON_LEFTHAND</code>、<code>FIRSTPERSON_RIGHTHAND</code>、<code>FIXED</code>、<code>GROUND</code>、<code>GUI</code>、<code>THIRDPERSON_LEFTHAND</code>、<code>THIRDPERSON_RIGHTHAND</code>。</p><p>所有这些在游戏中的显示效果都和 BlockBench 中 Display 页面的对应效果一样。你可以在<a href="./mechanics.furniture-mechanic.furniture-position.html">家具位置</a>章节中找到 <code>FIXED</code>（物品展示框位置）的示例。</p><p><code>tracking_roration</code> 设置决定了你是否想要用家具“追踪”玩家。</p><p>这个设置一般用于公告板和排行榜展示板等你想让玩家浏览信息的家具，而非普通的家具。</p><p>可用选项有：</p><ul><li><code>FIXED</code> - 不旋转</li><li><code>VERTICAL</code> - 允许绕 Y 轴转动</li><li><code>HORIZONTAL</code> - 允许绕 X 或 Z 轴转动</li><li><code>CENTER</code> - 允许绕中心转动</li></ul><p><code>brightness</code> 属性用于设置家具发光。</p><p>它有一个 <code>block_light</code> 和 <code>sky_light</code> 选项，用于设置 Minecraft 所使用的不同种类光照。示例配置如下：</p><div class="language-YAML vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">YAML</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">display_entity_properties</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  brightness</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    block_light</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">15</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    sky_light</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span></span></code></pre></div><p><code>scale</code> 属性可用于调整家具比例。</p><p>它有 <code>x</code>、<code>y</code> 与 <code>z</code> 属性，可用于调整各个轴上的缩放比例。示例配置如下：</p><div class="language-YAML vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">YAML</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">display_entity_properties</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  scale</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    z</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span></code></pre></div><p>剩余的 <code>view_range</code>（实体可见范围）、<code>shadow_radius</code>（阴影半径）与 <code>shadow_strength</code>（阴影深浅）都可以自行读懂，本文不在此过多解释。</p>`,44)]))}const E=i(p,[["render",t]]);export{o as __pageData,E as default};
