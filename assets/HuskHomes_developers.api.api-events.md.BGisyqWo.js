import{_ as e,c as d,o as a,b0 as s}from"./chunks/framework.w6NQj85O.js";const k=JSON.parse('{"title":"API 事件","description":"","frontmatter":{},"headers":[],"relativePath":"HuskHomes/developers.api.api-events.md","filePath":"HuskHomes/developers.api.api-events.md"}'),n={name:"HuskHomes/developers.api.api-events.md"};function r(l,t,i,o,c,p){return a(),d("div",null,t[0]||(t[0]=[s(`<h1 id="api-事件" tabindex="-1">API 事件 <a class="header-anchor" href="#api-事件" aria-label="Permalink to &quot;API 事件&quot;">​</a></h1><p>HuskHomes 提供了一系列的 API 事件供你的插件监听，用于检测玩家执行了本插件的哪些操作。大多数的事件都可取消，允许你阻止这些事件的进行，如果你想的话。</p><h2 id="api-事件列表" tabindex="-1">API 事件列表 <a class="header-anchor" href="#api-事件列表" aria-label="Permalink to &quot;API 事件列表&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Bukkit 事件名称</th><th>添加版本</th><th style="text-align:center;">是否可取消</th><th>描述</th></tr></thead><tbody><tr><td><code>HomeCreateEvent</code></td><td>4.0</td><td style="text-align:center;">✅</td><td>当玩家创建一个家传送点时调用</td></tr><tr><td><code>HomeListEvent</code></td><td>3.0</td><td style="text-align:center;">✅</td><td>当玩家请求浏览家/公开家传送点时调用</td></tr><tr><td><code>HomeEditEvent</code></td><td>4.0</td><td style="text-align:center;">✅</td><td>当玩家编辑家传送点（切换公开状态、修改位置、修改描述、修改名称）时调用</td></tr><tr><td><code>HomeDeleteEvent</code></td><td>3.0</td><td style="text-align:center;">✅</td><td>当玩家删除家传送点时调用†</td></tr><tr><td><code>DeleteAllHomesEvent</code></td><td>3.2.1</td><td style="text-align:center;">✅</td><td>当玩家使用命令 <code>/delhome all</code> 来删除他们所有的家传送点时调用</td></tr><tr><td><code>WarpCreateEvent</code></td><td>4.0</td><td style="text-align:center;">✅</td><td>当玩家设置地标传送点时调用</td></tr><tr><td><code>WarpListEvent</code></td><td>3.0</td><td style="text-align:center;">✅</td><td>当玩家列出地标传送点时调用</td></tr><tr><td><code>WarpEditEvent</code></td><td>4.0</td><td style="text-align:center;">✅</td><td>当玩家编辑地标传送点（修改位置、修改描述、修改名称）时调用</td></tr><tr><td><code>WarpDeleteEvent</code></td><td>3.0</td><td style="text-align:center;">✅</td><td>当玩家删除地标传送点时调用†</td></tr><tr><td><code>DeleteAllWarpsEvent</code></td><td>3.2.1</td><td style="text-align:center;">✅</td><td>当玩家使用命令 <code>/delwarp all</code> 来删除所有的地标传送点时调用</td></tr><tr><td><code>SendTeleportRequestEvent</code></td><td>4.1</td><td style="text-align:center;">✅</td><td>当玩家发送传送请求（<code>/tpa</code>）时调用</td></tr><tr><td><code>ReceiveTeleportRequestEvent</code></td><td>4.1</td><td style="text-align:center;">✅</td><td>当玩家收到传送请求时调用</td></tr><tr><td><code>ReplyTeleportRequestEvent</code></td><td>4.1</td><td style="text-align:center;">✅</td><td>当玩家接受或拒绝传送请求时调用</td></tr><tr><td><code>TeleportWarmupEvent</code></td><td>3.0</td><td style="text-align:center;">✅</td><td>当玩家开始传送预热时调用</td></tr><tr><td><code>TeleportWarmupCancelledEvent</code></td><td>4.6.3</td><td style="text-align:center;">❌</td><td>当玩家的传送预热被打断时调用</td></tr><tr><td><code>TeleportEventEvent</code></td><td>3.0</td><td style="text-align:center;">✅</td><td>当玩家被传送后调用‡</td></tr><tr><td><code>TeleportBackEventEvent</code></td><td>4.1</td><td style="text-align:center;">✅</td><td>当玩家被传送回他们的上一个位置（<code>/back</code>）时调用‡</td></tr><tr><td><code>RandomTeleportEvent</code></td><td>4.8</td><td style="text-align:center;">✅</td><td>当玩家被随机传送时调用</td></tr></tbody></table><p>† 当玩家输入命令 <code>/delhome all</code> 或 <code>/delwarp all</code> 来删除他们所有的家或地标传送点时，只会调用一个 <code>DeleteAllHomesEvent</code> 或 <code>DeleteAllWarpsEvent</code> 事件。 ‡ 仅在玩家传送的出发服务器上调用；传送的执行方在此处不重要。</p><h2 id="sponge-和-fabric-上的事件" tabindex="-1">Sponge 和 Fabric 上的事件 <a class="header-anchor" href="#sponge-和-fabric-上的事件" aria-label="Permalink to &quot;Sponge 和 Fabric 上的事件&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">提示</p><p>浏览 <a href="./developers.api">API 介绍页</a>来获取目标平台上的相关内容。</p></div><p>Sponge，有着和 Bukkit 相似的事件 API，拥有与上述相同的事件，前缀为 <code>Sponge</code>（所以在 Bukkit 上的 HomeCreateEvent 在 Sponge 上为 SpongeHomeCreateEvent。）</p><p>Fabric 使用回调来处理事件。HuskHomes 提供了与上述事件相同的回调。例如，为处理玩家创建家传送点的事件，你需要注册一个如下图代码所示的回调：</p><h3 id="huskhomes-和-fabric-回调" tabindex="-1">HuskHomes 和 Fabric 回调 <a class="header-anchor" href="#huskhomes-和-fabric-回调" aria-label="Permalink to &quot;HuskHomes 和 Fabric 回调&quot;">​</a></h3><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">HomeCreateCallback.EVENT.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">register</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((player, home) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Do something with the player and home</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ActionResult.SUCCESS; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Return an appropriate ActionResult</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});.</span></span></code></pre></div>`,11)]))}const E=e(n,[["render",r]]);export{k as __pageData,E as default};
