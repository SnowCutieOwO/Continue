import{_ as a,c as o,o as t,b0 as l}from"./chunks/framework.w6NQj85O.js";const h=JSON.parse('{"title":"🚧 事件","description":"","frontmatter":{},"headers":[],"relativePath":"DecentHolograms/api.events.md","filePath":"DecentHolograms/api.events.md"}'),r={name:"DecentHolograms/api.events.md"};function n(c,e,d,i,s,p){return t(),o("div",null,e[0]||(e[0]=[l('<h1 id="🚧-事件" tabindex="-1">🚧 事件 <a class="header-anchor" href="#🚧-事件" aria-label="Permalink to &quot;🚧 事件&quot;">​</a></h1><p>DecentHolograms 提供的自定义事件</p><p>DecentHolograms 提供了一系列自定义事件，全都可以在指定情况下触发。* ` 若要使用这些事件，将它们按需加入你的插件中，与其他服务器提供的事件进行组合使用。</p><h2 id="decenthologramsevent" tabindex="-1">DecentHologramsEvent <a class="header-anchor" href="#decenthologramsevent" aria-label="Permalink to &quot;DecentHologramsEvent&quot;">​</a></h2><p>此为最基础的事件。所有其他事件都从此继承，它可以用作其他基于 DecentHolograms 事件的全部捕获。</p><p>推荐使用更具体的事件，但如果你想要使用这个，推荐使用 <code>instanceof</code> 检查并获取更详细的事件实例使用。</p><p>这个事件不会影响服务器中的任何外部方法。</p><h2 id="decenthologramsreloadevent" tabindex="-1">DecentHologramsReloadEvent <a class="header-anchor" href="#decenthologramsreloadevent" aria-label="Permalink to &quot;DecentHologramsReloadEvent&quot;">​</a></h2><p>这个事件会在命令 <a href="./general.commands.general#dh-reload"><code>/dh reload</code></a> 命令重载服务器后触发。</p><p>如果你的插件需要注意 DecentHolograms 的任何重载（例如刷新通过其他方法添加的特殊内容），那么这个事件就会很有用。</p><p>这个事件不会影响服务器中的任何外部方法。</p><h2 id="hologramclickevent" tabindex="-1">HologramClickEvent <a class="header-anchor" href="#hologramclickevent" aria-label="Permalink to &quot;HologramClickEvent&quot;">​</a></h2><p>这个事件会在玩家左/右键点击悬浮字时触发。</p><p>这个事件可被取消，并允许你进一步处理相关内容。</p><p>这个事件提供了下列方法：</p><ul><li><code>getPlayer()</code> - 返回点击了悬浮字的玩家。</li><li><code>getHologram()</code> - 返回被点击的悬浮字名称。</li><li><code>getHologramPage()</code> - 返回被点击的悬浮字页码。</li><li><code>getClickType()</code> - 返回点击类型（使用左右键点击，及点击时是否按住了 Shift）。</li><li><code>getEntityId()</code> - 返回被点击实体的类型。</li></ul>',16)]))}const g=a(r,[["render",n]]);export{h as __pageData,g as default};
