import{_ as e,c as i,o as t,b0 as r}from"./chunks/framework.w6NQj85O.js";const g=JSON.parse('{"title":"插件安装","description":"","frontmatter":{},"headers":[],"relativePath":"LibreLogin/guides.installtion.md","filePath":"LibreLogin/guides.installtion.md"}'),s={name:"LibreLogin/guides.installtion.md"};function n(o,a,l,h,p,d){return t(),i("div",null,a[0]||(a[0]=[r(`<h1 id="插件安装" tabindex="-1">插件安装 <a class="header-anchor" href="#插件安装" aria-label="Permalink to &quot;插件安装&quot;">​</a></h1><h2 id="获取" tabindex="-1">获取 <a class="header-anchor" href="#获取" aria-label="Permalink to &quot;获取&quot;">​</a></h2><p>若你在 Paper 服务端上安装 LibreLogin，你还需要安装 ProtocolLib。</p><p>你可以从下面这些链接下载本插件：</p><ul><li><a href="https://github.com/kyngs/LibreLogin/releases" target="_blank" rel="noreferrer">Github Releases</a></li><li><a href="https://www.spigotmc.org/resources/librelogin-bungee-velocity.101040/" target="_blank" rel="noreferrer">SpigotMC 资源页</a></li></ul><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><p>关闭群组服。</p><p>下载 .jar 格式的插件文件，并将其放入你的 <code>plugins</code> 文件夹。</p><p>启动群组服。</p><p>控制台会出现这样的消息：</p><div class="language-Log vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Log</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">16:39:51</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> INFO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] [librelogin]: Loading configuration...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">16:39:51</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;"> WARN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] [librelogin]: !! A new configuration was generated, please fill it out, if in doubt, see the wiki !!</span></span></code></pre></div><p><strong>之后编辑插件文件夹中生成的 <code>config.conf</code> 文件夹。配置中带有注释，让你能更好了解插件。</strong></p><h2 id="登录服" tabindex="-1">登录服 <a class="header-anchor" href="#登录服" aria-label="Permalink to &quot;登录服&quot;">​</a></h2><p>你需要选择并保护你的登录服。大多数服主会选择标准的 Minecraft 服务器作为登录服，这样效率不高、存在漏洞且不能承载很多玩家。我推荐使用 <a href="https://www.spigotmc.org/resources/nanolimbo-1-8-1-18.86198/" target="_blank" rel="noreferrer">NanoLimbo</a> 作为登录服。它轻量、可配置，且能承载至少百名玩家。</p><h2 id="迁移" tabindex="-1">迁移 <a class="header-anchor" href="#迁移" aria-label="Permalink to &quot;迁移&quot;">​</a></h2><p><strong>若你不想玩家丢失数据，那这就是最基础的步骤。</strong></p><h3 id="从不包含登录插件的离线服务器迁入" tabindex="-1">从不包含登录插件的离线服务器迁入 <a class="header-anchor" href="#从不包含登录插件的离线服务器迁入" aria-label="Permalink to &quot;从不包含登录插件的离线服务器迁入&quot;">​</a></h3><p><a href="./guides.uuid-creators.html#离线cracked">离线 UUID 创建器可能是你最好的选择。</a></p><h3 id="从正版服务器迁入" tabindex="-1">从正版服务器迁入 <a class="header-anchor" href="#从正版服务器迁入" aria-label="Permalink to &quot;从正版服务器迁入&quot;">​</a></h3><p><a href="./guides.uuid-creators.html#官方mojang">Mojang UUID 创建器可能是你最好的选择。</a></p><h3 id="从登录插件迁入" tabindex="-1">从登录插件迁入 <a class="header-anchor" href="#从登录插件迁入" aria-label="Permalink to &quot;从登录插件迁入&quot;">​</a></h3><p>请参阅<a href="./guides.database-migration.html">数据库迁移</a>章节。</p><p>若你将 UUID 创建器指定为 RANDOM，则这个选项最适合你。</p><h2 id="接下来干什么" tabindex="-1">接下来干什么？ <a class="header-anchor" href="#接下来干什么" aria-label="Permalink to &quot;接下来干什么？&quot;">​</a></h2><p>现在你能进行下一步操作了。在此之前感谢你选择 LibreLogin 作为登录插件。我推荐你阅读本维基上的另一篇文章，让你能了解插件的全部功能。</p>`,25)]))}const u=e(s,[["render",n]]);export{g as __pageData,u as default};
