import{_ as a,c as i,o as e,b0 as n}from"./chunks/framework.w6NQj85O.js";const t="/assets/standalone-1.Cl3psT6l.png",E=JSON.parse('{"title":"独立应用 & REST API","description":"","frontmatter":{},"headers":[],"relativePath":"LuckPerms/developers.standalone-app-rest-api.md","filePath":"LuckPerms/developers.standalone-app-rest-api.md"}'),p={name:"LuckPerms/developers.standalone-app-rest-api.md"};function l(r,s,h,o,k,c){return e(),i("div",null,s[0]||(s[0]=[n('<h1 id="独立应用-rest-api" tabindex="-1">独立应用 &amp; REST API <a class="header-anchor" href="#独立应用-rest-api" aria-label="Permalink to &quot;独立应用 &amp; REST API&quot;">​</a></h1><p>在 Minecraft 服务器中不论是作为插件还是模组，LuckPerms 都可作为独立应用运行。原因如下：</p><ol><li>允许管理员快速切换<strong>LuckPerms 命令行</strong>并对远程数据库执行命令而无需启动 Minecraft 服务器！</li><li>允许小型独立拓展（如<strong>REST APPI</strong>）以独立应用的方式运行。</li></ol><h2 id="作为独立-api" tabindex="-1">作为独立 API <a class="header-anchor" href="#作为独立-api" aria-label="Permalink to &quot;作为独立 API&quot;">​</a></h2><p>独立“插件”是 LuckPerms 主代码库的一部分，处于 <a href="https://github.com/LuckPerms/LuckPerms/tree/master/standalone" target="_blank" rel="noreferrer"><code>standalone</code></a> 部分中。</p><p>运行独立 APP 最简单（也最推荐）的方式是使用 Docker。</p><p>只需确保 Docker 安装在你的机器上，之后输入下列命令即可：</p><div class="language-docker vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">docker</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">docker run -it --rm ghcr.io/luckperms/luckperms</span></span></code></pre></div><p>这将会启动一个命令行界面，就像你将它放在服务器中运行一样。 <img src="'+t+`" alt="img"></p><p>你可以使用<a href="./configuration">环境变量</a>来配置你的数据库地址/用户名/密码。</p><p>你也可以使用 Docker Compose。创建一个叫 <code>docker-compose.yml</code> 的文件并复制以下内容：</p><div class="language-YAML vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">YAML</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;3.8&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">services</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  luckperms</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ghcr.io/luckperms/luckperms</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Uncomment if your database is running on the same host</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    #extra_hosts:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    #  - &quot;database:host-gateway&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    environment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      LUCKPERMS_STORAGE_METHOD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">mysql</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      LUCKPERMS_DATA_ADDRESS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">database:3306</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      LUCKPERMS_DATA_DATABASE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">minecraft</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      LUCKPERMS_DATA_USERNAME</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">root</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      LUCKPERMS_DATA_PASSWORD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">passw0rd</span></span></code></pre></div><ul><li>使用 <code>docker compose up -d</code> 运行应用</li><li>使用 <code>docker compose logs -f luckperms</code> 浏览控制台</li><li>使用 <code>docker compose exec luckperms send &lt;命令&gt;</code> 发送命令</li><li>使用 <code>docker compose down</code> 停止应用</li></ul><h2 id="luckperms-rest-api-面向开发者" tabindex="-1">LuckPerms REST API（面向开发者） <a class="header-anchor" href="#luckperms-rest-api-面向开发者" aria-label="Permalink to &quot;LuckPerms REST API（面向开发者）&quot;">​</a></h2><p>LuckPerms REST API 是一个可以在独立应用（上述提及）中使用的“拓展”。</p><p>它允许其他程序、应用或脚本简单地读取/修改/写入 LuckPerms 数据，而无需与数据库直接交互。</p><p>更多信息与使用 API 的教程，请见：</p><ul><li><a href="https://github.com/LuckPerms/rest-api" target="_blank" rel="noreferrer"><code>LuckPerms/rest-api</code></a> 的 Github 仓库 &amp; README 文件</li><li><a href="https://petstore.swagger.io/?url=https://raw.githubusercontent.com/LuckPerms/rest-api/main/src/main/resources/luckperms-openapi.yml" target="_blank" rel="noreferrer"><code>API 规范</code></a></li></ul><h2 id="独立应用内拓展-面向开发者" tabindex="-1">独立应用内拓展（面向开发者） <a class="header-anchor" href="#独立应用内拓展-面向开发者" aria-label="Permalink to &quot;独立应用内拓展（面向开发者）&quot;">​</a></h2><p>你也可以为独立应用创建自己的“类插件”Java 拓展，并在启用时自动载入它们！</p><p>它非常简单：</p><ol><li>在 jar 的底层目录创建一个叫 <code>extension.json</code> 的文件，并将下文复制进去：<div class="language-JSON vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">JSON</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;class&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;com.example.extension.MainClass&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>（将其替换为你的主类！）</li><li>创建一个继承了 <code>import net.luckperms.api.extension.Extension</code> 的主类。它应该是一个无参数的构造函数，或者是只接受 <code>net.luckperms.api.LuckPerms</code> 实例的构造函数。</li></ol><p>完成！将你的 jar 文件放入 extensions 文件夹即可。</p>`,23)]))}const u=a(p,[["render",l]]);export{E as __pageData,u as default};
