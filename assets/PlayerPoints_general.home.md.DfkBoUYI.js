import{_ as e,c as r,o as t,b0 as o}from"./chunks/framework.w6NQj85O.js";const P=JSON.parse('{"title":"什么是 PlayerPoints？","description":"","frontmatter":{},"headers":[],"relativePath":"PlayerPoints/general.home.md","filePath":"PlayerPoints/general.home.md"}'),l={name:"PlayerPoints/general.home.md"};function i(n,a,d,s,c,h){return t(),r("div",null,a[0]||(a[0]=[o('<p><img src="https://camo.githubusercontent.com/e993ac7c5c25abe0a515230e237f1d8fedfaa8b8c2cfa5fc4f0075ffd47ff4c2/68747470733a2f2f696d6775722e636f6d2f5446547a4475642e706e67" alt="img"></p><h1 id="什么是-playerpoints" tabindex="-1">什么是 PlayerPoints？ <a class="header-anchor" href="#什么是-playerpoints" aria-label="Permalink to &quot;什么是 PlayerPoints？&quot;">​</a></h1><p>PlayerPoints 是一个简洁高效的经济插件，允许管理玩家用作货币的点数。它可以用于所有支持 PlayerPoints 的插件，或通过 Vault 与本插件进行交互。</p><h1 id="支持" tabindex="-1">支持 <a class="header-anchor" href="#支持" aria-label="Permalink to &quot;支持&quot;">​</a></h1><p>如果你在使用我们的插件时遇到了问题或想要提出建议，就来加入我们的<a href="https://discord.gg/MgUsTBK" target="_blank" rel="noreferrer">Discord 聊天群</a>吧！我们会在聊天群中提供支持，有需要的千万不要错过！</p><h1 id="下载与安装" tabindex="-1">下载与安装 <a class="header-anchor" href="#下载与安装" aria-label="Permalink to &quot;下载与安装&quot;">​</a></h1><h2 id="如何安装" tabindex="-1">如何安装 <a class="header-anchor" href="#如何安装" aria-label="Permalink to &quot;如何安装&quot;">​</a></h2><p>若要安装本插件，进入我们的 SpigotMC 资源介绍帖，并点击那个大大的下载按钮。之后你就会得到一个 jar 文件。确保你的服务器关掉之后，将这个文件放入 <code>/plugins</code> 文件夹下。之后就可以重新启动你的服务器了，你应该可以在 <code>/plugins</code> 下找到一个 <code>PlayerPoints</code> 文件夹，这里存储着插件的所有配置文件与数据文件。</p><h2 id="插件前置" tabindex="-1">插件前置 <a class="header-anchor" href="#插件前置" aria-label="Permalink to &quot;插件前置&quot;">​</a></h2><p>插件无需任何前置！但我们兼容 Vault 与 PlaceholderAPI。与 Vault 的联动默认禁用，你可以在 config.yml 中启用它。</p><h2 id="其他下载与安装方式" tabindex="-1">其他下载与安装方式 <a class="header-anchor" href="#其他下载与安装方式" aria-label="Permalink to &quot;其他下载与安装方式&quot;">​</a></h2><p>另一种可行的方法是，你可以从 Github 的代码中自行编译插件。PlayerPoints 使用 Gradle 来编译和构建插件。若要这么做，你需要在源码包的根文件夹中输入 <code>./gradlew build</code> 命令。在完成构建后插件应该会出现在 <code>./build/libs</code> 文件夹中。</p>',12)]))}const f=e(l,[["render",i]]);export{P as __pageData,f as default};
