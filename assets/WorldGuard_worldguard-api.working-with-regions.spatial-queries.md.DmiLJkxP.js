import{_ as s,c as a,o as t,b0 as n}from"./chunks/framework.w6NQj85O.js";const g=JSON.parse('{"title":"区域查询","description":"","frontmatter":{},"headers":[],"relativePath":"WorldGuard/worldguard-api.working-with-regions.spatial-queries.md","filePath":"WorldGuard/worldguard-api.working-with-regions.spatial-queries.md"}'),e={name:"WorldGuard/worldguard-api.working-with-regions.spatial-queries.md"};function l(h,i,k,p,E,d){return t(),a("div",null,i[0]||(i[0]=[n(`<h1 id="区域查询" tabindex="-1">区域查询 <a class="header-anchor" href="#区域查询" aria-label="Permalink to &quot;区域查询&quot;">​</a></h1><p>WorldGuard 针对下列两种区域查询方法进行了优化：</p><ul><li>找到所有包含指定位置的区域；</li><li>找到所有重叠指定区域的其他区域。</li></ul><p>空间查询可通过 RegionManager 的实例执行，但它也可以通过特殊的查询缓存执行。这两种情况都会返回一个 <code>ApplicableRegionSet</code> 对象，这其中包含着符合条件的区域列表，也是区域标志计算的额外方法所返回的内容。</p><p>也可以给予一个区域李彪，来制作你自己的 <code>ApplicableRegionSet</code>。在你想要测试标志的值且已经有一个用于测试的区域列表时会很有用（甚至不需要测试区域是否重叠）。</p><h2 id="获取-applicableregionset" tabindex="-1">获取 ApplicableRegionSet <a class="header-anchor" href="#获取-applicableregionset" aria-label="Permalink to &quot;获取 ApplicableRegionSet&quot;">​</a></h2><h3 id="通过队列缓存" tabindex="-1">通过队列缓存 <a class="header-anchor" href="#通过队列缓存" aria-label="Permalink to &quot;通过队列缓存&quot;">​</a></h3><p>队列缓存存储着上次一到两秒内查询的结果，这可以提升重复查询的效率，这是一个在事件处理中常见的情况。但是，查询缓存仅支持第一类查询，也就是位置查询。若要使用这些缓存，一个新的 <code>RegionQuery</code> 对象可以从 <code>RegionContainer</code> 获取（见“引自 Bukkit 的对象”章节来获悉如何转化 Bukkit 的位置）：</p><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RegionQuery query </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> container.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createQuery</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ApplicableRegionSet set </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> query.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getApplicableRegions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(loc);</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">示例：获取位于 (10, 64, 100) 的区域]</p><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Location loc </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> com.sk89q.worldedit.util.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Location</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(world, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 如上所述, 也可从 Bukkit 获取</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RegionContainer container </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> WorldGuard.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getPlatform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getRegionContainer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RegionQuery query </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> container.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createQuery</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ApplicableRegionSet set </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> query.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getApplicableRegions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(loc);</span></span></code></pre></div></div><p>缓存的一个特征就是它会在区域功能未启用或区域数据载入失败时<strong>返回虚拟结果</strong>：</p><ul><li>如果区域保护被禁用，那么它会返回 <code>PermissiveRegionSet</code> 对象，该对象不包含任何区域并允许任意操作；</li><li>如果区域数据载入失败，那么它会返回 <code>FailedLoadRegionSet</code> 对象，该对象不包含任何区域，且会将所有标志设置为 deny，也会为一些标志提供默认的值（例如 <code>deny-message</code> 会向玩家发送错误消息）。</li></ul><p>在这两种情况中，<code>set.isVirtual()</code> 都会返回 <code>true</code>。</p><h3 id="通过区域管理模块" tabindex="-1">通过区域管理模块 <a class="header-anchor" href="#通过区域管理模块" aria-label="Permalink to &quot;通过区域管理模块&quot;">​</a></h3><p>取一个<em>区域管理模块（RegionManager）</em>，方法 <code>getApplicableRegions(Vector)</code> 可以用于执行点状位置查询（见“引自 Bukkit 的对象”章节来获悉如何转化 Bukkit 的位置）</p><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">BlockVector3 position </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> BlockVector3.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">at</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ApplicableRegionSet set </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> regions.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getApplicableRegions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(position);</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">示例：获取位于 (10, 64, 100) 的区域]</p><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Location loc </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> new com.sk89q.worldedit.util.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Location</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(world, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 如上所述, 也可从 Bukkit 获取</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RegionContainer container </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> WorldGuard.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getPlatform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getRegionContainer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RegionManager regions </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> container.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(world);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 确保区域非空的检查</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ApplicableRegionSet set </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> regions.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getApplicableRegions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(loc.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toBlockPoint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span></code></pre></div><p>如果目标是找到一个重叠了其他区域的区域列表，那么需要在管理模块上使用方法 <code>getApplicableRegions(ProtectedRegion)</code>。因为区域的形状和区域实际上是相同的，需要使用虚拟命名。</p><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">BlockVector3 min </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> BlockVector3.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">at</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">BlockVector3 max </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> BlockVector3.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">at</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ProtectedRegion test </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ProtectedCuboidRegion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;dummy&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, min, max);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ApplicableRegionSet set </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> regions.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getApplicableRegions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(test);</span></span></code></pre></div><h3 id="手动构建" tabindex="-1">手动构建 <a class="header-anchor" href="#手动构建" aria-label="Permalink to &quot;手动构建&quot;">​</a></h3><p><code>RegionResultSet</code> 需要一个 <code>List&lt;ProtectedRegion&gt;</code> 和一个可选的全局区域。</p><p>所提供的区域不需要重叠。</p><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">List&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ProtectedRegion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; regions </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Lists.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">newArrayList</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">regions.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(spawn);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">regions.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mall);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">regions.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(pub);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ApplicableRegionSet set </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RegionResultSet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(regions, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 无全局区域的情况</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">警告</p><p>返回的区域列表可能会按照位置重新排序。在你将列表给予实例事件后，它不应再被使用。</p></div></div><h2 id="使用-applicableregionset" tabindex="-1">使用 ApplicableRegionSet <a class="header-anchor" href="#使用-applicableregionset" aria-label="Permalink to &quot;使用 ApplicableRegionSet&quot;">​</a></h2><p>如果你对获取区域列表感兴趣的话，<code>ApplicableRegionSet</code> 包含 <code>Iterable&lt;ProtectedRegion&gt;</code>，所以你可以将这些内容枚举出来。但是，在区域间通过枚举检查可能会忽略一些设置，比如优先级、标志默认值、继承关系以及全局区域。我们还是比较建议通过本地的查询方法进行保护或标志检查，这些在<a href="./worldguard-api.working-with-regions.querying-protection">保护查询</a>和<a href="./worldguard-api.working-with-regions.flag-calculation">标志计算</a>章节中均有提及。</p><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (ProtectedRegion region </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> set) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 对每个区域做一些不同的事情</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">示例：获取区域列表</p><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">List&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ProtectedRegion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; region </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Lists.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">newArrayList</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(set);</span></span></code></pre></div></div>`,21)]))}const o=s(e,[["render",l]]);export{g as __pageData,o as default};
