import{_ as e,c as o,o as t,b0 as s}from"./chunks/framework.w6NQj85O.js";const g=JSON.parse('{"title":"🎨 颜色","description":"","frontmatter":{},"headers":[],"relativePath":"DecentHolograms/general.formats-and-colors.colors.md","filePath":"DecentHolograms/general.formats-and-colors.colors.md"}'),l={name:"DecentHolograms/general.formats-and-colors.colors.md"};function c(i,a,d,r,n,p){return t(),o("div",null,a[0]||(a[0]=[s('<h1 id="🎨-颜色" tabindex="-1">🎨 颜色 <a class="header-anchor" href="#🎨-颜色" aria-label="Permalink to &quot;🎨 颜色&quot;">​</a></h1><p>在悬浮字行中使用彩色字体的方法指导。</p><h2 id="基础颜色与格式" tabindex="-1">基础颜色与格式 <a class="header-anchor" href="#基础颜色与格式" aria-label="Permalink to &quot;基础颜色与格式&quot;">​</a></h2><p>DecentHolograms 支持所有以 <code>&amp;</code> 表示的基础颜色与格式。 例如，<code>&amp;1</code> 表示暗蓝色，<code>&amp;l</code> 表示加粗字体。</p><h2 id="rgb-仅支持-1-16" tabindex="-1">RGB（仅支持 1.16+） <a class="header-anchor" href="#rgb-仅支持-1-16" aria-label="Permalink to &quot;RGB（仅支持 1.16+）&quot;">​</a></h2><p>DecentHolograms 支持多种 RGB 颜色的格式，当然所有的格式都需要包含六位十六进制色码。一二两位代表红色值，中间两位代表绿色值，最后两位则代表蓝色值。</p><ul><li><code>#RRGGBB</code></li><li><code>&amp;#RRGGBB</code></li><li><code>&lt;#RRGGBB&gt;</code></li><li><code>{#RRGGBB}</code></li></ul><h2 id="渐变文本" tabindex="-1">渐变文本 <a class="header-anchor" href="#渐变文本" aria-label="Permalink to &quot;渐变文本&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">提示</p><p>格式代码也可以在渐变色之间使用。</p></div><p>渐变色可以通过 <code>&lt;#rrggbb&gt;文本&lt;/#rrggbb&gt;</code> 表示，<code>&lt;#rrggbb&gt;</code> 为文本左侧起始颜色，而 <code>&lt;/#rrggbb&gt;</code> 为文本右侧终止颜色。</p><div class="info custom-block"><p class="custom-block-title">示例</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;#FF0000&gt;渐变色！&lt;/#00FF00&gt;</span></span></code></pre></div></div><h2 id="彩色渐变" tabindex="-1">彩色渐变 <a class="header-anchor" href="#彩色渐变" aria-label="Permalink to &quot;彩色渐变&quot;">​</a></h2><p>彩色文本可以通过 <code>&lt;RAINBOW0&gt;文本&lt;/RAINBOW&gt;</code> 的形式生成。数字 <code>1</code> 可以改成 0 至 999 的任意数字来修改彩虹样式。</p><div class="info custom-block"><p class="custom-block-title">示例</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;RAINBOW1&gt;彩色渐变！&lt;/RAINBOW&gt;</span></span></code></pre></div></div><h2 id="彩色文本-动态" tabindex="-1">彩色文本（动态） <a class="header-anchor" href="#彩色文本-动态" aria-label="Permalink to &quot;彩色文本（动态）&quot;">​</a></h2><p>使用 <code>&lt;#AMIN:colors&gt;</code>，你可以让文本在所有的颜色代码之间切换！</p><p>这个功能和原本 HolographicDisplays 的彩色相似，出于方便，本插件也有相同的 <code>&amp;u</code> 供你使用。</p><div class="info custom-block"><p class="custom-block-title">示例</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&amp;u动态彩色文本！</span></span></code></pre></div></div>',18)]))}const b=e(l,[["render",c]]);export{g as __pageData,b as default};
