import{_ as s,c as a,o,b0 as n}from"./chunks/framework.w6NQj85O.js";const g=JSON.parse('{"title":"群组服安装","description":"","frontmatter":{},"headers":[],"relativePath":"LuckPerms/install-on-multiple-servers.md","filePath":"LuckPerms/install-on-multiple-servers.md"}'),r={name:"LuckPerms/install-on-multiple-servers.md"};function i(t,e,l,c,p,d){return o(),a("div",null,e[0]||(e[0]=[n(`<h1 id="群组服安装" tabindex="-1">群组服安装 <a class="header-anchor" href="#群组服安装" aria-label="Permalink to &quot;群组服安装&quot;">​</a></h1><p>LuckPerms 自设计之初便为群组服着想。在正确安装与配置之后，权限数据会在群组子服间传输。</p><p>在群组中安装 LuckPerms 时，默认的<a href="./install-on-a-single-server.html">安装步骤</a>和<a href="./install-on-a-single-server.html#要求">安装需求</a>仍然有效。</p><p>但是，群组服安装有一个额外的要求。<br><strong>所有的 LuckPerms 示例都必须连接至同一个存储系统</strong>。这意味着你只能使用 <code>MySQL</code>、<code>MariaDB</code>、<code>PostgreSQL</code> 或 <code>MongoDB</code> 中的一个。LuckPerms 必须连接至同一个 SQL/MongoDB 服务器，且要能读取到同一数据库或集。</p><h2 id="预安装" tabindex="-1">预安装 <a class="header-anchor" href="#预安装" aria-label="Permalink to &quot;预安装&quot;">​</a></h2><p>在你开始之前，这里有一些东西西需要你预先检查。它们可不会自动设置——这些步骤也非常重要。万不可跳过！</p><p>LuckPerms 支持 <code>BungeeCord</code>、<code>Velovity</code> 或 <code>LilyPad</code> 群组核心。</p><h3 id="bungeecord" tabindex="-1">BungeeCord <a class="header-anchor" href="#bungeecord" aria-label="Permalink to &quot;BungeeCord&quot;">​</a></h3><p>LuckPerms 以玩家的唯一标识（UUID）作为存储数据的索引。玩家的唯一标识是由服务器内部提供的，但是这也可通过服务器中的 <code>online-mode</code> 设置改变。</p><p>在使用 BungeeCord 时，检查 BungeeCord 的 IP 转发系统是否正确设置和配置是<strong>非常重要</strong>的。</p><p>在你的 BungeeCord 群组的 <code>config.yml</code> 文件中，你需要这样设置：</p><div class="language-YAML vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">YAML</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">ip_forward</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span></code></pre></div><p>在每个子服的 <code>spigot.yml</code> 中，你需要这样设置：</p><div class="language-YAML vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">YAML</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 该选项可以在 &quot;settings&quot; 下找到</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">bungeecord</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span></code></pre></div><p>在每个海绵端子服的 <code>config/sponge/global.conf</code> 文件中，你需要这样设置：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sponge {</span></span>
<span class="line"><span>    bungeecord {</span></span>
<span class="line"><span>        ip-forwarding=true</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre></div><p>在修改这些设置之后，你就可以重启 Spigot/Sponge 和 BungeeCord 服务器。</p><p>你也应该确保服务器防火墙正确启用，以此阻止可疑用户强行进入后端服务器。在 SpigotMC 上有<a href="https://www.spigotmc.org/wiki/firewall-guide/" target="_blank" rel="noreferrer">一篇教程</a>提供了相关做法。</p><h3 id="lilypad" tabindex="-1">LilyPad <a class="header-anchor" href="#lilypad" aria-label="Permalink to &quot;LilyPad&quot;">​</a></h3><p>若你正在使用 LulyPad，请先阅读 <a href="http://www.lilypadmc.org/threads/connecting-your-bukkit-servers.13/" target="_blank" rel="noreferrer">LilyPad 安装教程</a>，应先确保 <code>LilyPad-Connect</code> 插件正确安装在了子服。</p><h2 id="在群组服中安装-luckperms" tabindex="-1">在群组服中安装 LuckPerms <a class="header-anchor" href="#在群组服中安装-luckperms" aria-label="Permalink to &quot;在群组服中安装 LuckPerms&quot;">​</a></h2><p>在群组服中安装 LuckPerms 非常简单，这里有些在你安装每个实例时需要修改的选项。</p><p>更具体的<a href="https://luckperms.net/wiki/Installation" target="_blank" rel="noreferrer">安装教程</a>可以指导你在子服安装 LuckPerms。应当在群组下的每个子服都按步骤操作。（大多数情况下只需将插件放入 plugins/mods 文件夹即可）</p><p>在安装了 LuckPerms 之后，你需要关闭服务器，打开主配置文件，并将注意力集中在下文的选项：</p><p><a href="./configuration.html#server"><strong><code>server</code></strong></a></p><p>若你想要在安装时就设置权限或继承权限组，你就需要修改配置文件中 <code>server</code> 的值。（这部分配置文件就在配置文件的最顶上！😄）</p><p>这个值用于决定一个“服务器”对所有玩家进服时的上下文<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>。</p><p><a href="./configuration.html#storage-method"><strong><code>storage-method</code></strong></a></p><p>正如在页面顶所述的那样，若你想要在子服之间同步数据，那么子服安装的所有 LuckPerms 都需要连接到同一个服务器。</p><p>这意味着 <code>storage-method</code> 只能是 <code>mysql</code>、<code>mariadb</code>、<code>postgresql</code> 或 <code>mongodb</code>。请不要忘了在配置文件中填写数据库的连接凭证！</p><p><a href="./configuration.html#messaging-service"><strong><code>messaging-service</code></strong></a></p><p>“通信服务”是 LuckPerms 内的一个功能，允许服务器在权限数据发生改变时提醒其他服务器。该功能也允许条目在群组之间调配。</p><ul><li>若你正在运行群组服但群组服核心未安装 LuckPerms，且子服使用的是同一数据库，那么请将使用的数据库设置为 <code>sql</code>。</li><li>若你正在运行小规模群组服且有一个 BungeeCord/Velocity 群组服核心安装了 LuckPerms，那么请将使用的数据库设置为 <code>pluginmsg</code>。</li><li>若你搭建的是基于 LilyPad 的群组服，那么将该选项设置为 <code>LilyPad</code>。</li><li>若你正在运行群组服且有多于一个 BungeeCord/Velocity 核心，那么建议搭建一个 Redis 通信服务器（若你正在运行的是多于一个群组的服务器，那么我默认你已知道这些！），并将该选项设置为 <code>redis</code>。在更改该选项后别忘了填写登录凭据设置！</li></ul><h2 id="bungeecord-velocity-版的-luckperms" tabindex="-1">BungeeCord/Velocity 版的 LuckPerms <a class="header-anchor" href="#bungeecord-velocity-版的-luckperms" aria-label="Permalink to &quot;BungeeCord/Velocity 版的 LuckPerms&quot;">​</a></h2><p>有一个常见的错误观点是，在群组服核心上安装 LuckPerms 就不用再在子服上安装一次。这种说法是错误的。</p><p>在将 LuckPerms 安装至群组服后，它会做两件事：</p><ul><li>它会通过<strong>群组中的插件</strong>处理权限检查。它<em>不会</em>拦截或处理子服插件中的权限检查。</li><li>在 <code>messaging-service</code> 设置为 “pluginmsg” 时会将更新提醒和记录日志在群组服之间传递。</li></ul><p>这意味着如果你想要用 LuckPerms 在 Spigot 或 Sponge 子服做权限检查，你也需要在子服上安装它，在群组服核心上安装它是不能代替它在子服安装的步骤的。</p><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>条件值，即执行命令时的“<a href="./features.context.html">情境</a>”。 <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section>`,40)]))}const h=s(r,[["render",i]]);export{g as __pageData,h as default};
