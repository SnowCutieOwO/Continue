import{_ as t,c as a,o as s,b0 as r}from"./chunks/framework.w6NQj85O.js";const _=JSON.parse('{"title":"LuckPerms 上下文","description":"","frontmatter":{},"headers":[],"relativePath":"ajLeaderboards/setup.luckperms-contexts.md","filePath":"ajLeaderboards/setup.luckperms-contexts.md"}'),o={name:"ajLeaderboards/setup.luckperms-contexts.md"};function c(l,e,p,n,d,i){return s(),a("div",null,e[0]||(e[0]=[r('<h1 id="luckperms-上下文" tabindex="-1">LuckPerms 上下文 <a class="header-anchor" href="#luckperms-上下文" aria-label="Permalink to &quot;LuckPerms 上下文&quot;">​</a></h1><p>在 ajLeaderboards 2.5.2 之后，你可以通过 <a href="https://luckperms.net/" target="_blank" rel="noreferrer">LuckPerms</a> 的上下文（Contexts）来给予指定排行榜指定排名的玩家权限/前后缀。</p><p>确保你在配置文件中启用了 <code>register-lp-contexts</code>。我强烈推荐一并启用 <code>only-register-lpc-for</code> 来只注册你实际使用的上下文。</p><h2 id="释义" tabindex="-1">释义 <a class="header-anchor" href="#释义" aria-label="Permalink to &quot;释义&quot;">​</a></h2><p>如果你不知道什么是 LuckPerms 的上下文，你可以在<a href="https://luckperms.net/wiki/Context" target="_blank" rel="noreferrer">这里</a>（本维基可跳转<a href="https://snowcutieowo.github.io/LuckPerms/#/features.context" target="_blank" rel="noreferrer">至此</a>）详细了解。</p><p>ajLeaderboards 添加了自定义（动态）上下文，允许你检查玩家所在的名次。</p><p>上下文格式为 <code>ajlb_pos_&lt;排行榜&gt;_&lt;类型&gt;</code>。其中 <code>&lt;排行榜&gt;</code> 为排行榜的名称，<code>&lt;type&gt;</code> 则为刷新间隔类型。</p><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h2><p>例如，我想要给 <code>statistic_time_played</code> 在 <code>alltime</code>（全时）的值排行第一的玩家 Essentials 的 /back 命令权限，则你可以输入这个命令：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>/luckperms group default permission set essentials.back true ajlb_pos_statistic_time_played_alltime=1</span></span></code></pre></div><p>这个权限将会在他们的这个变量值排名第一时生效（如果不再是第一，则会失去该权限）。</p>',11)]))}const m=t(o,[["render",c]]);export{_ as __pageData,m as default};
