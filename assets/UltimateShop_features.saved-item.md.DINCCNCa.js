import{_ as e,c as i,o as s,b0 as t}from"./chunks/framework.w6NQj85O.js";const k=JSON.parse('{"title":"💾 保存物品","description":"","frontmatter":{},"headers":[],"relativePath":"UltimateShop/features.saved-item.md","filePath":"UltimateShop/features.saved-item.md"}'),r={name:"UltimateShop/features.saved-item.md"};function l(p,a,o,d,n,h){return s(),i("div",null,a[0]||(a[0]=[t(`<h1 id="💾-保存物品" tabindex="-1">💾 保存物品 <a class="header-anchor" href="#💾-保存物品" aria-label="Permalink to &quot;💾 保存物品&quot;">​</a></h1><h2 id="保存你的物品" tabindex="-1">保存你的物品 <a class="header-anchor" href="#保存你的物品" aria-label="Permalink to &quot;保存你的物品&quot;">​</a></h2><p>你可以使用命令 <code>/shop saveitem &lt;物品 ID&gt;</code> 来保存手上的物品。物品有两种存储方式：</p><ul><li>Bukkit：使用 BukkitAPI 的方法保存物品。这个方法只支持保存原版数据和通过 BukkitAPI 保存的持久数据，来自其他插件的 NBT 数据将不会被保存。</li><li>Paper：使用 PaperAPI 的方法保存物品。这个方法可以保存所有物品，不会丢失任何数据。（仅 Paper 1.15+ 服务器）</li></ul><p>如果你的 Paper 服务器且不需要使用最新的 Paper 保存方法，你需要打开 <code>config.yml</code> 并修改 <code>paper-api.save-item</code> 为 <code>false</code>，这样我们会在Paper 服务端上使用 Bukkit 的保存方法。</p><h2 id="使用保存的物品" tabindex="-1">使用保存的物品 <a class="header-anchor" href="#使用保存的物品" aria-label="Permalink to &quot;使用保存的物品&quot;">​</a></h2><p>你可以在此使用“物品格式”。在物品格式中，这里有一个称作 <code>material</code> 的选项，默认情况下，你需要输入原版物品 ID，但你也可以使用保存物品的 ID 让插件直接获取保存的物品而不是生成。</p><div class="language-YAML vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">YAML</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">display-item</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  material</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">superior_sword</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 假设保存的物品 ID 为 &#39;superior_sword&#39;</span></span></code></pre></div><p>保存的物品会持续缓存在内存中，可以防止重复读取配置文件，减少服务器性能消耗。但是，如果你保存的物品数量太多，也有可能消耗更多内存。</p>`,9)]))}const u=e(r,[["render",l]]);export{k as __pageData,u as default};
