import{_ as i,c as a,o as n,b0 as l}from"./chunks/framework.w6NQj85O.js";const o=JSON.parse('{"title":"API","description":"","frontmatter":{},"headers":[],"relativePath":"HuskSync/developers.api-v3.md","filePath":"HuskSync/developers.api-v3.md"}'),e={name:"HuskSync/developers.api-v3.md"};function t(h,s,p,k,d,r){return n(),a("div",null,s[0]||(s[0]=[l(`<h1 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h1><p>HuskSync API（v3）提供了更新和返回<a href="./developers.api-v3.data-snapshot-api">快照数据</a>的方法，一系列 API 事件，可用于追踪数据何时被同步或保存，一系列同步自定义数据类型的序列化注册的基础方法。</p><h2 id="兼容性" tabindex="-1">兼容性 <a class="header-anchor" href="#兼容性" aria-label="Permalink to &quot;兼容性&quot;">​</a></h2><p><a href="https://repo.william278.net/#/releases/net/william278/husksync/" target="_blank" rel="noreferrer"><img src="https://repo.william278.net/api/badge/latest/releases/net/william278/husksync/husksync-common?color=00fb9a&amp;name=Maven&amp;prefix=v" alt="img"></a></p><p>HuskSync API 的版本与插件发行版相同。请注意大版本更新和紧急修复可能会导致 API 产生变动，但绝不会毫无提醒。</p><table tabindex="0"><thead><tr><th>API 版本</th><th>HuskSync 版本</th><th>是否支持</th></tr></thead><tbody><tr><td>v3.x</td><td>v3.0-至今</td><td>✅</td></tr><tr><td>v2.x</td><td>v2.0-v2.2.8</td><td>❌</td></tr><tr><td>v1.x</td><td>v1.0-v1.4.1</td><td>❌</td></tr></tbody></table><h3 id="平台" tabindex="-1">平台 <a class="header-anchor" href="#平台" aria-label="Permalink to &quot;平台&quot;">​</a></h3><div class="info custom-block"><p class="custom-block-title">注意</p><p>对于低于 <code>3.3</code> 的版本，HuskSync API 仅通过（位于 <code>net.willian278:husksync</code>）Bukkit 平台分发。</p></div><p>HuskSync API 仅对下列平台开放使用：</p><ul><li><code>bukkit</code> - Bukkit、Spigot、Paper 等。会向 <code>org.bukkit</code> 对象提供 Bukkit API 的事件监听器和适配器。</li><li><code>common</code> - 对所有平台的通用 API</li></ul><h3 id="针对旧版本" tabindex="-1">针对旧版本 <a class="header-anchor" href="#针对旧版本" aria-label="Permalink to &quot;针对旧版本&quot;">​</a></h3><ul><li>HuskSync API 仅会分发低于 <code>v3.3</code> 的 Bukkit 模块；成品 ID 为 <code>net.william278:husksync</code> 而非 <code>net.william278.husksync:husksync-平台名称</code>。</li><li>低于 <code>v2.2.5</code> 的 HuskSync 通过 JitPack 分发，你需要使用 <code>https://jitpack.io</code> 仓库。</li></ul><h2 id="内容一览" tabindex="-1">内容一览 <a class="header-anchor" href="#内容一览" aria-label="Permalink to &quot;内容一览&quot;">​</a></h2><ol><li><a href="#API-介绍">API 介绍</a><ol><li><a href="#11-通过-maven-安装">通过 Maven 安装</a></li><li><a href="#12-通过-gradle-安装">通过 Gradle 安装</a></li></ol></li><li><a href="#2-将-husksync-导入为依赖">将 HuskSync 导入为依赖</a></li><li><a href="#3-创建一个-api-实例类">创建一个 API 实例类</a></li><li><a href="#4-检查-husksync-是否存在并对接">检查 HuskSync 是否存在并对接</a></li><li><a href="#4-检查-husksync-是否存在并对接">获取 API 实例</a></li><li><a href="#6-completablefuture-与-optional-基础">CompletableFuture 与 Optional 基础</a></li><li><a href="#7-下一步">下一步</a></li></ol><h2 id="api-介绍" tabindex="-1">API 介绍 <a class="header-anchor" href="#api-介绍" aria-label="Permalink to &quot;API 介绍&quot;">​</a></h2><h3 id="_1-1-通过-maven-安装" tabindex="-1">1.1 通过 Maven 安装 <a class="header-anchor" href="#_1-1-通过-maven-安装" aria-label="Permalink to &quot;1.1 通过 Maven 安装&quot;">​</a></h3><h4 id="maven-安装详情" tabindex="-1">Maven 安装详情 <a class="header-anchor" href="#maven-安装详情" aria-label="Permalink to &quot;Maven 安装详情&quot;">​</a></h4><p>将仓库按如下格式添加至你的 <code>pom.xml</code>。你也可以在末尾指定 <code>/snapshots</code> 来获取最新版的开发构建（但不推荐）</p><div class="language-XML vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">XML</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">repositories</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">repository</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;william278.net&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;https://repo.william278.net/releases&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">repository</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">repositories</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>将依赖按下列各式导入 <code>pom.xml</code>。请将 <code>VERSION</code> 替换为 HuskSync 的最新版本（去掉左侧的“v”）：<img src="https://img.shields.io/github/v/tag/WiIIiam278/HuskSync?color=%23ffffff&amp;label=%20&amp;style=flat-square" alt="img"></p><h3 id="_1-2-通过-gradle-安装" tabindex="-1">1.2 通过 Gradle 安装 <a class="header-anchor" href="#_1-2-通过-gradle-安装" aria-label="Permalink to &quot;1.2 通过 Gradle 安装&quot;">​</a></h3><h4 id="gradle-安装详情" tabindex="-1">Gradle 安装详情 <a class="header-anchor" href="#gradle-安装详情" aria-label="Permalink to &quot;Gradle 安装详情&quot;">​</a></h4><p>将以依赖按如下格式导入你的 <code>build.gradle</code>。你也可以通过指定 <code>/snapshots</code> 来使用最新的开发构建版仓库（但不推荐）</p><div class="language-Kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">allprojects</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    repositories</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        maven</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { url </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://repo.william278.net/releases&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>按如下格式导入依赖。将 <code>VERSION</code> 替换为 HuskSync 的最新版本号（去掉左侧的“v”）：<img src="https://img.shields.io/github/v/tag/WiIIiam278/HuskSync?color=%23ffffff&amp;label=%20&amp;style=flat-square" alt="img"></p><div class="language-Kotlin vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Kotlin</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dependencies</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    compileOnly </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;net.william278.husksync:husksync-PLATFORM:VERSION&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="_2-将-husksync-导入为依赖" tabindex="-1">2. 将 HuskSync 导入为依赖 <a class="header-anchor" href="#_2-将-husksync-导入为依赖" aria-label="Permalink to &quot;2. 将 HuskSync 导入为依赖&quot;">​</a></h3><ul><li>在 <code>plugin.yml</code> 中将 HuskSync 添加为 <code>softdepend</code>（若不强制依赖 HuskSync）或 <code>depend</code>（若强制依赖 HuskSync）</li></ul><div class="language-YAML vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">YAML</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">MyPlugin</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">net.william278.myplugin.MyPlugin</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">author</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">William278</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">description</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;A plugin that hooks with the HuskSync API!&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">softdepend</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 或者在这里用 &#39;depend&#39; 代替，取决于你想将 HuskSync 作为软依赖或硬依赖</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">HuskSync</span></span></code></pre></div><h2 id="_3-创建一个-api-实例类" tabindex="-1">3. 创建一个 API 实例类 <a class="header-anchor" href="#_3-创建一个-api-实例类" aria-label="Permalink to &quot;3. 创建一个 API 实例类&quot;">​</a></h2><ul><li>除非你的插件完全依赖于 HuskSync，否则不应将 HuskSync API 直接在主类中调用，如果 HuskSync 尚未安装，在这种情况下就会抛出 <code>ClassNotFoundException</code> 错误。</li></ul><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HuskSyncAPIHook</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HuskSyncAPIHook</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // API 交互相关代码</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="_4-检查-husksync-是否存在并对接" tabindex="-1">4. 检查 HuskSync 是否存在并对接 <a class="header-anchor" href="#_4-检查-husksync-是否存在并对接" aria-label="Permalink to &quot;4. 检查 HuskSync 是否存在并对接&quot;">​</a></h2><ul><li>在与 API 对接类进行交互前确认是否安装了 HuskSync</li></ul><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MyPlugin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> JavaPlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> HuskSyncAPIHook huskSyncAPIHook;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Override</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> onEnable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (Bukkit.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getPluginManager</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getPlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;HuskSync&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.huskSyncAPIHook </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HuskSyncAPIHook</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="_5-获取-api-实例" tabindex="-1">5. 获取 API 实例 <a class="header-anchor" href="#_5-获取-api-实例" aria-label="Permalink to &quot;5. 获取 API 实例&quot;">​</a></h2><ul><li>你现在可以通过调用 <code>HuskSyncAPI#getInstance()</code> 方法获取 API 实例</li><li>若是在 Bukkit 平台，你也可以调用 <code>BukkitHuskSyncAPI#getBukkitInstance()</code> 来获取 Bukkit 平台的 API 实例（推荐）</li></ul><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> net.william278.husksync.api.HuskSyncAPI;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HuskSyncAPIHook</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> HuskSyncAPI huskSyncAPI;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HuskSyncAPIHook</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.huskSyncAPI </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> HuskSyncAPI.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="_6-completablefuture-与-optional-基础" tabindex="-1">6. CompletableFuture 与 Optional 基础 <a class="header-anchor" href="#_6-completablefuture-与-optional-基础" aria-label="Permalink to &quot;6. CompletableFuture 与 Optional 基础&quot;">​</a></h2><ul><li>HuskSync 的 API 经常会用到 <code>CompletableFuture</code> 与 <code>Optional</code>。</li><li><code>CompletableFuture</code> 是一种异步回调机制。方法会异步处理，数据则会在它被请求时返回。之后，使用 <code>CompletableFuture#thenAccept(data -&gt; {})</code> 来对获取的 <code>data</code> 进行你需要的处理，以此避免卡顿。</li><li><code>Optional</code> 是可避免返回 null 的数据表示。你可通过 <code>Optional#isEmpty()</code>（若你的调用无可用返回数据则会被 API 返回）。若该可选内容包含数据，则你可以通过 <code>Optional#get()</code> 方法获取。</li></ul><div class="warning custom-block"><p class="custom-block-title">警告</p><p>你不应在 HuskSyncAPI 的 future 异步任务上调用 <code>#join()</code> 方法，这些任务是在服务器上异步处理的，如果你试着锁定主线程并处理它们，可能导致线程死锁并导致服务器崩溃。</p></div><h2 id="_7-下一步" tabindex="-1">7. 下一步 <a class="header-anchor" href="#_7-下一步" aria-label="Permalink to &quot;7. 下一步&quot;">​</a></h2><p>现在你已经把所有东西都准备妥当了，你可以开始与 HuskSync API 进行交互了！</p><ul><li><a href="./developers.api-v3.data-snapshot-api">数据快照 API</a> —— 获取、编辑、创建与删除数据快照并更新玩家</li><li><a href="./developers.api-v3.custom-data-api">自定义数据 API</a> —— 注册自定义数据类型以使得你的插件数据能被 HuskSync 同步</li><li><a href="./developers.api-v3.api-events">API 事件</a> —— 监听、取消与修改异步事件的数据结果</li></ul>`,44)]))}const E=i(e,[["render",t]]);export{o as __pageData,E as default};
