import{_ as i,c as a,o as n,b0 as t}from"./chunks/framework.w6NQj85O.js";const e="/assets/image32.Fm1BBHp0.png",l="/assets/image33.I9KAoIUD.png",p="/assets/image34.B_sbj7dE.png",y=JSON.parse('{"title":"（初学者）物品","description":"","frontmatter":{},"headers":[],"relativePath":"Oraxen/configuration.items-beginners.md","filePath":"Oraxen/configuration.items-beginners.md"}'),h={name:"Oraxen/configuration.items-beginners.md"};function k(r,s,o,d,E,c){return n(),a("div",null,s[0]||(s[0]=[t('<h1 id="初学者-物品" tabindex="-1">（初学者）物品 <a class="header-anchor" href="#初学者-物品" aria-label="Permalink to &quot;（初学者）物品&quot;">​</a></h1><p>如何简单创建你的首个物品</p><p>今天我想要制作一个超酷的东西。另外，玩家总是觉得物以稀为贵，所以来个超稀有物品兴许能让他们爽到（普通的稀有物品已经不能满足这些玩家的胃口了，哈哈）。不开玩笑，让我们进入第一步吧！这个教程会解释如何创建一个缟玛瑙斧，但你也可以按自己的想法决定这些。</p><h2 id="_1-以创建材质起手" tabindex="-1">1. 以创建材质起手 <a class="header-anchor" href="#_1-以创建材质起手" aria-label="Permalink to &quot;1. 以创建材质起手&quot;">​</a></h2><p>在本教程中我会创建一个简单的平面物品贴图，Oraxen 会负责生成模型，如果需要，你也可以使用一些软件，如 <a href="https://cubik.studio/" target="_blank" rel="noreferrer">Cubik Studio</a>（付费）或 <a href="https://www.blockbench.net/" target="_blank" rel="noreferrer">BlockBench</a>（免费且开源）。这些软件都很优秀。</p><p>这里是我在 Photoshop 的 16x16 画布中创建的贴图（看起来风格与原版相近）：</p><p><img src="'+e+`" alt="img" title="Photoshop 截图"></p><p>然后，我将文件保存为 <em>onyx_axe.png</em>。</p><h2 id="_2-基础配置" tabindex="-1">2. 基础配置 <a class="header-anchor" href="#_2-基础配置" aria-label="Permalink to &quot;2. 基础配置&quot;">​</a></h2><p>我难以决定物品的具体分类（这像武器还是工具？），所以我在物品文件夹下创建了 <strong>super_cool_items.yml</strong>。这里是我添加的内容：</p><div class="language-YAML vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">YAML</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">onyx_axe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  displayname</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&lt;#6f737d&gt;缟玛瑙斧&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  material</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">DIAMOND_AXE</span></span></code></pre></div><p>所以，我为我的物品赋予了一个自定义名称，并选择钻石斧为实际物品。在<a href="./configuration.items-advanced.html">高级教程</a>中你将会见到其他可用的设置项（例如如何使用附魔、物品标志（Item Flags）、属性等内容）</p><h2 id="_3-为物品绑定材质" tabindex="-1">3. 为物品绑定材质 <a class="header-anchor" href="#_3-为物品绑定材质" aria-label="Permalink to &quot;3. 为物品绑定材质&quot;">​</a></h2><p>通常你需要创建两个 json 文件：一个用于向游戏表示如何显示材质，另一个则向游戏表示何时显示（如果所有的钻石斧都拥有同一个材质，那会相当难堪），在 Oraxen 中这些是不必要的，我们只需要指定向图片添加的不同材质层（一般只有一层，但在可染色物品例如皮革盔甲上可以指定更多层）。这里是我添加的内容：</p><div class="language-YAML vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">YAML</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">onyx_axe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  displayname</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&lt;black&gt;缟玛瑙斧&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  material</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">DIAMOND_AXE</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  Pack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    generate_model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    parent_model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;item/handheld&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    textures</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">onyx_axe.png</span></span></code></pre></div><p>如你所见，我将 <code>parent_model</code> 设为了 <code>&quot;item/handheld&quot;</code>，这是工具使用的父模型，诸如钻石的普通物品则需要使用 <code>&quot;item/generated&quot;</code>，这决定了物品在手中的样子（如果不正确设置的话，拿在手中的物品可能会看起来很奇怪）。</p><p>我也需要将我的 <strong>onyx_axe.png</strong> 放入 Oraxen 中的 <strong>/pack/textures</strong> 文件夹。这样一来我就可以直接启动服务器并见到生效的物品，但我还想给这个东西加点别的能力。</p><div class="info custom-block"><p class="custom-block-title">提示</p><p>你也可以使用 json 来创建 3D 模型物品，这里是<a href="./configuration.items-advanced.html">相关文档的链接</a>。</p></div><h2 id="_4-以机制美化物品" tabindex="-1">4. 以机制美化物品 <a class="header-anchor" href="#_4-以机制美化物品" aria-label="Permalink to &quot;4. 以机制美化物品&quot;">​</a></h2><p>在每个物品的配置中你可以添加一个机制部分，并加入一大堆酷炫的东西。另外，如果你觉得现有的机制还不能让你满意（我已经尽可能加了很多机制），你可以通过 Oraxen API 向插件添加一些新的机制（见<a href="./developers.create-your-own-mechanic.html">编写自定义机制</a>）。我想给我的斧头加上超高的耐久度，并能让它挖掘基岩。这里是我写的：</p><div class="language-YAML vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">YAML</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">onyx_axe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  displayname</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&lt;black&gt;缟玛瑙斧&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  material</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">DIAMOND_AXE</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  Pack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    generate_model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    parent_model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;item/handheld&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    textures</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">onyx_axe.png</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  Mechanics</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    durability</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20000</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    bedrockbreak</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      delay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      period</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      probability</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span></span></code></pre></div><p>20000 点的耐久相当客观，相比只有 1561 点耐久的钻石工具来说确实是这样。我将用该物品挖掘基岩的掉落率设置为了 0.5，因为这样就可以让基岩保持难以获取的状态。</p><div class="info custom-block"><p class="custom-block-title">提示</p><p>某些机制需要用到 ProtocolLib，破坏基岩的示例就是这样。</p></div><h2 id="_5-试试看吧" tabindex="-1">5. 试试看吧！ <a class="header-anchor" href="#_5-试试看吧" aria-label="Permalink to &quot;5. 试试看吧！&quot;">​</a></h2><p>我重启了服务器，进入之后会向我发送在 Oraxen 文件夹中 <code>/pack/</code> 的加密纹理包，一切都很不错。</p><p>我通过命令 <code>/o inv</code> 将斧头放入背包，这是我得到的：</p><p><img src="`+l+'" alt="img" title="我和我的缟玛瑙斧"></p><p>我也能挖开基岩：</p><p><img src="'+p+'" alt="img" title="我用我的缟玛瑙斧挖基岩"></p><div class="info custom-block"><p class="custom-block-title">提示</p><p>如果你能做到这一步，恭喜你，你已经创建了你的第一个物品。👍</p></div>',30)]))}const u=i(h,[["render",k]]);export{y as __pageData,u as default};
