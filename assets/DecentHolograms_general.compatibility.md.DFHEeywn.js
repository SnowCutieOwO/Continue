import{_ as s,C as i,c as d,o as p,b0 as g,j as o,G as t,a as n,w as u}from"./chunks/framework.w6NQj85O.js";const P=JSON.parse('{"title":"🔗 兼容性","description":"","frontmatter":{},"headers":[],"relativePath":"DecentHolograms/general.compatibility.md","filePath":"DecentHolograms/general.compatibility.md"}'),e={name:"DecentHolograms/general.compatibility.md"};function m(b,l,a,f,H,k){const r=i("font");return p(),d("div",null,[l[58]||(l[58]=g('<h1 id="🔗-兼容性" tabindex="-1">🔗 兼容性 <a class="header-anchor" href="#🔗-兼容性" aria-label="Permalink to &quot;🔗 兼容性&quot;">​</a></h1><p>兼容的（悬浮字）插件及其迁移教程。</p><h2 id="placeholderapi" tabindex="-1">PlaceholderAPI <a class="header-anchor" href="#placeholderapi" aria-label="Permalink to &quot;PlaceholderAPI&quot;">​</a></h2><p>DecentHolograms 完全支持 PlaceholderAPI（PAPI），它的变量可以用在诸如悬浮字行、点击操作和动态文本等部分。</p><div class="info custom-block"><p class="custom-block-title">信息</p><p>默认情况下为防止性能问题，动画中的变量不会被解析。<br> 若要允许变量被解析，请在 DecentHolograms 的 <code>config.yml</code> 中启用 <code>allow-placeholders-inside-animations</code>。</p></div><h2 id="悬浮字转化" tabindex="-1">悬浮字转化 <a class="header-anchor" href="#悬浮字转化" aria-label="Permalink to &quot;悬浮字转化&quot;">​</a></h2><p>DecentHolograms 支持导入其他悬浮字插件的数据。下文为当前版本支持迁移数据的插件，需要使用的命令以及转而使用 DecentHolograms 所需要注意的事项。</p><div class="info custom-block"><p class="custom-block-title">信息</p><p>无需加载插件即可进行转化。我们只需要这些插件存储悬浮字的文件。</p></div><h3 id="cmi" tabindex="-1">CMI <a class="header-anchor" href="#cmi" aria-label="Permalink to &quot;CMI&quot;">​</a></h3><blockquote><p>/dh convert CMI</p></blockquote><p><strong>默认文件位置：</strong><code>plugins/CMI/holograms.yml</code></p><p><strong>特殊行为：</strong></p>',12)),o("ul",null,[o("li",null,[t(r,{color:"green"},{default:u(()=>l[0]||(l[0]=[n("✔")])),_:1}),l[1]||(l[1]=n()),l[2]||(l[2]=o("code",null,"ICON:<物品>",-1)),l[3]||(l[3]=n(" 会被转化为 ")),l[4]||(l[4]=o("code",null,"#ICON:<物品>",-1))]),o("li",null,[t(r,{color:"green"},{default:u(()=>l[5]||(l[5]=[n("✔")])),_:1}),l[6]||(l[6]=n()),l[7]||(l[7]=o("code",null,"!nextpage!",-1)),l[8]||(l[8]=n(" 会创建一页新的悬浮字。"))]),o("li",null,[t(r,{color:"orange"},{default:u(()=>l[9]||(l[9]=[n("⚠")])),_:1}),l[10]||(l[10]=n(" 名称以 ")),l[11]||(l[11]=o("code",null,"#<",-1)),l[12]||(l[12]=n(" 或 ")),l[13]||(l[13]=o("code",null,"#>",-1)),l[14]||(l[14]=n(" 开头的悬浮字会被忽略"))])]),l[59]||(l[59]=o("h3",{id:"futureholograms",tabindex:"-1"},[n("FutureHolograms "),o("a",{class:"header-anchor",href:"#futureholograms","aria-label":'Permalink to "FutureHolograms"'},"​")],-1)),l[60]||(l[60]=o("blockquote",null,[o("p",null,"/dh convert FutureHolograms")],-1)),l[61]||(l[61]=o("p",null,[o("strong",null,"默认文件位置："),o("code",null,"plugins/FutureHolograms/holograms.yml")],-1)),l[62]||(l[62]=o("p",null,[o("strong",null,"特殊行为：")],-1)),o("ul",null,[o("li",null,[t(r,{color:"orange"},{default:u(()=>l[15]||(l[15]=[n("⚠")])),_:1}),l[16]||(l[16]=n(" 转化过程中无特殊行为。"))])]),l[63]||(l[63]=o("h3",{id:"gholo",tabindex:"-1"},[n("GHolo "),o("a",{class:"header-anchor",href:"#gholo","aria-label":'Permalink to "GHolo"'},"​")],-1)),l[64]||(l[64]=o("blockquote",null,[o("p",null,"/dh convert GHolo")],-1)),l[65]||(l[65]=o("p",null,[o("strong",null,"默认文件位置："),o("code",null,"plugins/GHolo/h.data")],-1)),l[66]||(l[66]=o("p",null,[o("strong",null,"特殊行为：")],-1)),o("ul",null,[o("li",null,[t(r,{color:"green"},{default:u(()=>l[17]||(l[17]=[n("✔")])),_:1}),l[18]||(l[18]=n()),l[19]||(l[19]=o("code",null,"ICON:<物品>",-1)),l[20]||(l[20]=n(" 会被转化为 ")),l[21]||(l[21]=o("code",null,"#ICON:<物品>",-1))]),o("li",null,[t(r,{color:"green"},{default:u(()=>l[22]||(l[22]=[n("✔")])),_:1}),l[23]||(l[23]=n()),l[24]||(l[24]=o("code",null,"ENTITY:<实体>",-1)),l[25]||(l[25]=n(" 会被转化为 ")),l[26]||(l[26]=o("code",null,"#ENTITY:<实体>",-1))]),o("li",null,[t(r,{color:"green"},{default:u(()=>l[27]||(l[27]=[n("✔")])),_:1}),l[28]||(l[28]=n()),l[29]||(l[29]=o("code",null,"[x]",-1)),l[30]||(l[30]=n("、")),l[31]||(l[31]=o("code",null,"[X]",-1)),l[32]||(l[32]=n(" 和 ")),l[33]||(l[33]=o("code",null,"[|]",-1)),l[34]||(l[34]=n(" 会被转化为 Unicode 字符"))]),o("li",null,[t(r,{color:"green"},{default:u(()=>l[35]||(l[35]=[n("✔")])),_:1}),l[36]||(l[36]=n()),l[37]||(l[37]=o("code",null,"[#rrggbb 文本 #rrggbb]",-1)),l[38]||(l[38]=n(" 会被转化为 <#rrggbb>文本</#rrggbb>"))])]),l[67]||(l[67]=o("h3",{id:"holograms",tabindex:"-1"},[n("Holograms "),o("a",{class:"header-anchor",href:"#holograms","aria-label":'Permalink to "Holograms"'},"​")],-1)),l[68]||(l[68]=o("blockquote",null,[o("p",null,"/dh convert Holograms")],-1)),l[69]||(l[69]=o("p",null,[o("strong",null,"默认文件位置："),o("code",null,"plugins/Holograms/holograms.yml")],-1)),l[70]||(l[70]=o("p",null,[o("strong",null,"特殊行为：")],-1)),o("ul",null,[o("li",null,[t(r,{color:"green"},{default:u(()=>l[39]||(l[39]=[n("✔")])),_:1}),l[40]||(l[40]=n()),l[41]||(l[41]=o("code",null,"ITEM:<物品>",-1)),l[42]||(l[42]=n(" 会被转化为 ")),l[43]||(l[43]=o("code",null,"#ICON:<物品>",-1))])]),l[71]||(l[71]=o("h3",{id:"holographicdisplays",tabindex:"-1"},[n("HolographicDisplays "),o("a",{class:"header-anchor",href:"#holographicdisplays","aria-label":'Permalink to "HolographicDisplays"'},"​")],-1)),l[72]||(l[72]=o("blockquote",null,[o("p",null,"/dh convert HolographicDisplays")],-1)),l[73]||(l[73]=o("p",null,[o("strong",null,"默认文件位置："),o("code",null,"plugins/HolographicDisplays/database.yml")],-1)),l[74]||(l[74]=o("p",null,[o("strong",null,"特殊行为：")],-1)),o("ul",null,[o("li",null,[t(r,{color:"green"},{default:u(()=>l[44]||(l[44]=[n("✔")])),_:1}),l[45]||(l[45]=n()),l[46]||(l[46]=o("code",null,"ICON:<物品>",-1)),l[47]||(l[47]=n(" 会被转化为 ")),l[48]||(l[48]=o("code",null,"#ICON:<物品>",-1))]),o("li",null,[t(r,{color:"green"},{default:u(()=>l[49]||(l[49]=[n("✔")])),_:1}),l[50]||(l[50]=n()),l[51]||(l[51]=o("code",null,"{papi: <变量>}",-1)),l[52]||(l[52]=n(" 会被转化为 ")),l[53]||(l[53]=o("code",null,"%<变量>%",-1))]),o("li",null,[t(r,{color:"green"},{default:u(()=>l[54]||(l[54]=[n("✔")])),_:1}),l[55]||(l[55]=n()),l[56]||(l[56]=o("code",null,"{empty}",-1)),l[57]||(l[57]=n(" 会被转化为颜色代码模拟的空行。"))])])])}const y=s(e,[["render",m]]);export{P as __pageData,y as default};
