import{_ as o,c as a,o as t,b0 as d}from"./chunks/framework.w6NQj85O.js";const r="/assets/verbose-1.ClTmrpFS.png",c="/assets/verbose-2.Bdl9RvqF.png",b=JSON.parse('{"title":"权限检查系统","description":"","frontmatter":{},"headers":[],"relativePath":"LuckPerms/features.verbose.md","filePath":"LuckPerms/features.verbose.md"}'),l={name:"LuckPerms/features.verbose.md"};function s(i,e,p,n,h,m){return t(),a("div",null,e[0]||(e[0]=[d('<h1 id="权限检查系统" tabindex="-1">权限检查系统 <a class="header-anchor" href="#权限检查系统" aria-label="Permalink to &quot;权限检查系统&quot;">​</a></h1><p>是否遇到过想要给予一个插件的命令对应权限，却找不到而焦头烂额的情况？</p><p>也许文档已经过时了，或者没有你想要的信息。可能你想要调试与玩家权限相关的问题，或者只是对插件所检查的权限感兴趣。</p><p>权限检查系统就能允许你实时监控权限检查！</p><h2 id="使用方法" tabindex="-1">使用方法 <a class="header-anchor" href="#使用方法" aria-label="Permalink to &quot;使用方法&quot;">​</a></h2><p>命令用法如下文所述：</p><h3 id="lp-verbose-on-record-off-upload-筛选" tabindex="-1"><code>/lp verbose &lt;on/record|off/upload&gt; [筛选]</code> <a class="header-anchor" href="#lp-verbose-on-record-off-upload-筛选" aria-label="Permalink to &quot;`/lp verbose &lt;on/record|off/upload&gt; [筛选]`&quot;">​</a></h3><p>第一个参数负责启用/禁用系统，而第二个则帮你设置过滤。</p><table tabindex="0"><thead><tr><th>选项</th><th>描述</th></tr></thead><tbody><tr><td><code>on</code></td><td>启用系统，并会在筛选内容符合所给参数时显示在聊天栏中。</td></tr><tr><td><code>record</code></td><td>与“on”模式相似，但你不会在聊天栏中见到消息。</td></tr><tr><td><code>off</code></td><td>禁用系统，并从内存中清理任意匹配的内容。</td></tr><tr><td><code>upload</code></td><td>与“off”相同，但会上传结果至网页浏览器以便进一步分析，完成上传后会显示一条链接供你访问。</td></tr></tbody></table><h3 id="lp-verbose-command-名称-命令-的功能" tabindex="-1"><code>/lp verbose command &lt;名称&gt; &lt;命令&gt;</code> 的功能： <a class="header-anchor" href="#lp-verbose-command-名称-命令-的功能" aria-label="Permalink to &quot;`/lp verbose command &lt;名称&gt; &lt;命令&gt;` 的功能：&quot;">​</a></h3><p><code>/lp verbose command</code> 命令允许你在游戏内静默检查指定命令的权限。若要使用，只需输入命令 <code>/lp verbose command &lt;名称&gt; &lt;命令&gt;</code>，之后 LuckPerms 便会按如下步骤快速检查一次。</p><ol><li>它会为玩家启用权限判断系统，并使用参数所给的过滤条件进行筛选。</li><li>它会让玩家强制执行参数中给定的命令。</li><li>它会自动关闭。</li></ol><p>完成这些事情后，聊天栏中会显示被检查到的权限，且不会造成刷屏。若你需要找到某条没有文档详细记录的命令权限时，这个功能将会很有用。</p><p>命令将会强制玩家以他们自己的身份高效地执行参数给定的命令。作为结果，使用这个功能需要额外的权限。你可以在<a href="./command-usage.permission.html">权限列表</a>章节找到它们。当拥有 <code>luckperm.*</code> 通配符权限时，该权限不会包含该功能的正常权限。</p><h4 id="启用功能时客户端卡顿" tabindex="-1">启用功能时客户端卡顿？ <a class="header-anchor" href="#启用功能时客户端卡顿" aria-label="Permalink to &quot;启用功能时客户端卡顿？&quot;">​</a></h4><p>若你的客户端在输入命令 <code>/lp verbose on</code> 时卡顿，很有可能是同时检查的权限数量太多，而客户端难以处理大量的聊天栏消息导致的。一般推荐你执行 <code>/lp verbose record</code>。<code>record</code> 命令将会将权限检查发送至网页编辑器的检查浏览器，而不是以聊天栏消息的方式发送至客户端。若要结束记录并打开网页浏览器，只需输入命令 <code>/lp verbose upload</code>。</p><p>相似地，或者说，在使用在线浏览器时，你也可以设置筛选，下文会详细解释。</p><h3 id="筛选" tabindex="-1">筛选 <a class="header-anchor" href="#筛选" aria-label="Permalink to &quot;筛选&quot;">​</a></h3><p>筛选是一串用于匹配结果内容的表达式，它可以隐藏你不需要的条目。它可以只是一个玩家名称，或更高级的内容。</p><p>一条筛选表达式将会匹配任意以它开头的权限节点，或完整的玩家名称。你可以使用 <code>&amp;</code>（和）、<code>|</code>（英文竖杠，或）和 <code>!</code>（非/取反）来编写表达式。表达式中也可以放入 <code>( )</code> 括号。</p><h4 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h4><ul><li><code>Luck &amp; (essentials | worldedit)</code> - 匹配玩家“Luck”以“essentials”或“worldedit”开头的任何内容</li><li><code>Luck &amp; !anticheat</code> - 匹配玩家“Luck”不以“anticheat”开头的任何内容</li><li><code>anticheat &amp; !anticheat.check</code> 匹配所有玩家以“anticheat”但不以“anticheat.check”开头的任何内容</li></ul><h2 id="网页浏览器" tabindex="-1">网页浏览器 <a class="header-anchor" href="#网页浏览器" aria-label="Permalink to &quot;网页浏览器&quot;">​</a></h2><p>网页浏览器显示的内容与游戏内基本相同，但在处理大量检查时分析起来更简单。</p><p><img src="'+r+'" alt="img"></p><p>你可以直接在条目上点击来查询检查的更多信息：</p><p><img src="'+c+'" alt="img"></p>',27)]))}const f=o(l,[["render",s]]);export{b as __pageData,f as default};
