import{_ as o,c as r,o as s,j as e,a}from"./chunks/framework.w6NQj85O.js";const m=JSON.parse('{"title":"操作方","description":"","frontmatter":{},"headers":[],"relativePath":"WorldEdit/developer-api.api-concepts.actors.md","filePath":"WorldEdit/developer-api.api-concepts.actors.md"}'),d={name:"WorldEdit/developer-api.api-concepts.actors.md"};function c(i,t,l,p,n,_){return s(),r("div",null,t[0]||(t[0]=[e("h1",{id:"操作方",tabindex:"-1"},[a("操作方 "),e("a",{class:"header-anchor",href:"#操作方","aria-label":'Permalink to "操作方"'},"​")],-1),e("p",null,[e("code",null,"Actor"),a(" 可以是任何使用 WorldEdit 命令或调用它特定部分 API 的对象。通常来讲，操作方是玩家，但它们也可以是一个命令方块、控制台，甚至是一个实体。需要厘清的一个事实是，一个操作方对象并不需要知道它在世界的哪个位置，尽管很多操作方对象集成了 "),e("code",null,"Locatable"),a(" 用于获取位置。模组/插件并不经常需要向 WorldEdit API 提供操作方，但在某个对接例如 "),e("code",null,"EditSessionEvent"),a(" 事件（见“"),e("a",{href:"./developer-api.api-concepts.edit-sessions"},"编辑会话事件"),a("”章节）会提供操作方对象，这允许你基于操作方的不同而做出一些个性化的选择。")],-1)]))}const u=o(d,[["render",c]]);export{m as __pageData,u as default};
