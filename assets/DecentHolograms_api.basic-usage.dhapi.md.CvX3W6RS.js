import{_ as s,c as i,o as e,b0 as t}from"./chunks/framework.w6NQj85O.js";const c=JSON.parse('{"title":"DHAPI","description":"","frontmatter":{},"headers":[],"relativePath":"DecentHolograms/api.basic-usage.dhapi.md","filePath":"DecentHolograms/api.basic-usage.dhapi.md"}'),l={name:"DecentHolograms/api.basic-usage.dhapi.md"};function n(p,a,h,o,d,k){return e(),i("div",null,a[0]||(a[0]=[t(`<h1 id="dhapi" tabindex="-1">DHAPI <a class="header-anchor" href="#dhapi" aria-label="Permalink to &quot;DHAPI&quot;">​</a></h1><p>DHAPI 类内的多种方法阐释</p><p><code>DHAPI</code> 类在 2.0.12 被添加。它的目的就是成为 DecentHolograms API 的主要用法，提供了创建、编辑与删除悬浮字、悬浮字页或行而无需直接与这些内容交互的方法。</p><h2 id="创建悬浮字" tabindex="-1">创建悬浮字 <a class="header-anchor" href="#创建悬浮字" aria-label="Permalink to &quot;创建悬浮字&quot;">​</a></h2><p><code>DHAPI</code> 类提供了 <code>createHologram</code> 方法来创建悬浮字，且可自由决定悬浮字是否永久存在，或是否带有默认文本。</p><h3 id="基础的-createhologram-方法" tabindex="-1">基础的 <code>createHologram</code> 方法 <a class="header-anchor" href="#基础的-createhologram-方法" aria-label="Permalink to &quot;基础的 \`createHologram\` 方法&quot;">​</a></h3><p>最基础的代码看起来会像这样：</p><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DHAPI.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createHologram</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String, Location);</span></span></code></pre></div><p>第一个参数即为悬浮字的名称，第二个参数则为悬浮字所在的位置（需传入一个 <code>org.bukkit.Location</code> 对象）</p><p>使用这个方法可以创建一个悬浮字，且它的第一行是配置文本中设定的“默认文本”。 除此之外这个悬浮字还是<strong>非持久</strong>的，因此它不会被保存至 YAML 文件，而且会在插件重载/服务器重启之后消失。</p><h3 id="创建永久悬浮字" tabindex="-1">创建永久悬浮字 <a class="header-anchor" href="#创建永久悬浮字" aria-label="Permalink to &quot;创建永久悬浮字&quot;">​</a></h3><p>若要让悬浮字变成永久状态，我们同样可以使用 <code>createHologram</code> 方法，但要在它的末尾加上一个布尔值：</p><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DHAPI.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createHologram</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String, Location, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>在这里填入 <code>true</code> 可以告诉 DecentHolograms，这条悬浮字是永久的，需要存进它在 <code>holograms</code> 下的 YAML 文件里。在这之后，这条悬浮字就会在插件启用时自动载入。</p><div class="warning custom-block"><p class="custom-block-title">重要！</p><p>调用 <code>createHologram</code> 时若指定的悬浮字名称已存在，则会抛出一个错误。 若要避免这种情况，请先在调用方法前检查相同的悬浮字是否已存在。</p><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> createHologram</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String name, Location location){</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(DHAPI.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getHologram</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(name) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    DHAPI.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createHologram</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(name, location);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></div><h3 id="添加初始文本" tabindex="-1">添加初始文本 <a class="header-anchor" href="#添加初始文本" aria-label="Permalink to &quot;添加初始文本&quot;">​</a></h3><p><code>createHologram</code> 方法也有提供了一种设定初始内容的方法，可以覆盖配置文件中提供的默认文本。 下为方法示例：</p><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DHAPI.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createHologram</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String, Location, List</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">String</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>当然，就像<a href="#创建悬浮字">第一个例子</a>的那样，这不会创建一个持久显示的悬浮字。但是，肯定有方法能让我们这么做：</p><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DHAPI.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createHologram</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String, Location, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, List</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">String</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>就像<a href="#创建永久悬浮字">第二个例子</a>那样，在这里填入 <code>true</code> 会让悬浮字能持久显示。</p><h2 id="获取悬浮字" tabindex="-1">获取悬浮字 <a class="header-anchor" href="#获取悬浮字" aria-label="Permalink to &quot;获取悬浮字&quot;">​</a></h2><p>若要通过这个类编辑悬浮字，首先你要获得一个 <code>Hologram</code> 实例。这可以通过 <code>getHologram</code> 方法实现：</p><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DHAPI.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getHologram</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String);</span></span></code></pre></div><p>如果给定名称对应的悬浮字不存在，这个方法会返回 <code>null</code>。</p><h2 id="获取悬浮字页" tabindex="-1">获取悬浮字页 <a class="header-anchor" href="#获取悬浮字页" aria-label="Permalink to &quot;获取悬浮字页&quot;">​</a></h2><p>DeceneHolograms 允许悬浮字有多页不同的文本。所以肯定有在悬浮字实例上获取 <code>HologramPage</code> 实例的方法。</p><p>方法本身很容易看懂：</p><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DHAPI.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getHologramPage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Hologram, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p><code>int</code> 处填入的应该为不小于 0 的整数，表示获取悬浮字的索引。</p><div class="warning custom-block"><p class="custom-block-title">重要提醒</p><ul><li>方法可能会返回 <code>null</code>，因此提供的页码应该不小于 0，且小于页码总数。</li><li>除非<a href="#删除已有页">手动移除</a>，否则悬浮字实例总会有一个序号为 0 的 <code>HologramPage</code> 实例。</li></ul></div><h2 id="获取悬浮字行" tabindex="-1">获取悬浮字行 <a class="header-anchor" href="#获取悬浮字行" aria-label="Permalink to &quot;获取悬浮字行&quot;">​</a></h2><p>因为一个悬浮字能有多页，因此 <code>DHAPI</code> 提供的 <code>getHologramLine</code> 方法会需要一个 <code>HologramPage</code> 实例。 <a href="#获取悬浮字">上一部分</a>已经提及了如何获取 <code>HologramPage</code> 实例。</p><p>在你获取了有效的 <code>HologramPage</code> 实例之后，你可以使用 <code>getHologramLine</code> 方法：</p><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DHAPI.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getHologramLine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(HologramPage, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p><code>int</code> 处填入的应该为不小于 0 的整数，表示获取悬浮字的索引。<br> 除此之外，你还可以直接对着返回的 <code>HologramPage</code> 实例使用 <code>getLine</code> 方法。</p><p>需要注意的是，正如上文警告过的那样，这个方法也可能会返回 <code>null</code>。 所以这个方法同样需要在使用 <code>HologramPage</code> 之前做好非空检查。</p><h2 id="编辑悬浮字行" tabindex="-1">编辑悬浮字行 <a class="header-anchor" href="#编辑悬浮字行" aria-label="Permalink to &quot;编辑悬浮字行&quot;">​</a></h2><p>这里有多种方法编辑悬浮字，例如添加一行、编辑一行或者移除一行。</p><h3 id="添加新行" tabindex="-1">添加新行 <a class="header-anchor" href="#添加新行" aria-label="Permalink to &quot;添加新行&quot;">​</a></h3><p>为了将一行文本加入悬浮字，你需要使用 <code>addHologramLine</code> 方法。最基本的使用方式看起来会像这样：</p><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DHAPI.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addHologramLine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Hologram, String);</span></span></code></pre></div><p>这会向悬浮字的第一页添加一行文本。<br> 如果你的如果你的悬浮字有很多页，并且你想要给除了第一页之外的其他页加上文本，你就可以用到下面这种方法：</p><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DHAPI.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addHologramLine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Hologram, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, String);</span></span></code></pre></div><p><code>int</code> 处填入的应该为不小于 0 的整数，表示获取悬浮字的索引。需要注意的是，序号从 0 开始计数，例如第一页的序号为 0，第二页的序号为 1。</p><div class="tip custom-block"><p class="custom-block-title">提示</p><p>你可以将 String 参数替换为 <code>org.bukkit.Material</code> 或 <code>org.bukkit.ItemStack</code> 示例。 这会按你提供的 Material / ItemStack 创建一个悬浮物品。 如果你传入的参数为后者，则某些 NBT 可能不会被加入。前者不包含任何 NBT 值。</p></div><h3 id="覆盖已有行" tabindex="-1">覆盖已有行 <a class="header-anchor" href="#覆盖已有行" aria-label="Permalink to &quot;覆盖已有行&quot;">​</a></h3><p>你可以将某一行悬浮字改为其他内容，甚至将一整页悬浮字的内容都覆盖。</p><p>若要覆盖指定行文本，你可以使用下列方法：</p><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DHAPI.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setHologramLine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Hologram, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, String);</span></span></code></pre></div><p><code>int</code> 处填入的应该为不小于 0 的整数，表示获取悬浮字的索引。需要注意的是，序号从 0 开始计数，例如第一页的序号为 0，第二页的序号为 1。<br> 如果你的如果你的悬浮字有很多页，并且你想要给除了第一页之外的其他页加上文本，你就可以用到下面这种方法：</p><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DHAPI.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setHologramLine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Hologram, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, String);</span></span></code></pre></div><p><code>int</code> 处填入的应该为不小于 0 的整数，表示获取悬浮字页的索引（同样以 0 起始）。第二个 <code>int</code> 填入的则是悬浮字行的索引。</p><div class="tip custom-block"><p class="custom-block-title">提示</p><p>你可以将 String 参数替换为 <code>org.bukkit.Material</code> 或 <code>org.bukkit.ItemStack</code> 示例。 这会按你提供的 Material / ItemStack 创建一个悬浮物品。 如果你传入的参数为后者，则某些 NBT 可能不会被加入。前者不包含任何 NBT 值。</p></div><p>最后你也可以编辑整页的文本。若要这么做，你可以使用 <code>setHologramLines</code> 方法（注意末尾的 <code>s</code>）方法：</p><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DHAPI.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setHologramLines</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Hologram, List</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">String</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>与之前的例子一样，这个方法会修改第一页悬浮字。你可以使用如下方法来批量修改指定页的悬浮字行：</p><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DHAPI.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setHologramLines</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Hologram, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, List</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">String</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="插入新行" tabindex="-1">插入新行 <a class="header-anchor" href="#插入新行" aria-label="Permalink to &quot;插入新行&quot;">​</a></h3><p>你可以通过这个方法将悬浮字插入指定行的位置。</p><p>最基本的方法看起来像这样：</p><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DHAPI.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">insertHologramLine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Hologram, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, String);</span></span></code></pre></div><p>这会向悬浮字的第一页指定行号（以 0 起始）插入一行新文本。</p><p>与上文方法相似，这个方法也提供了一种能让你在其他页插入文本的方法：</p><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DHAPI.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">insertHologramLine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Hologram, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, String);</span></span></code></pre></div><p><code>int</code> 处填入的应该为不小于 0 的整数，表示获取悬浮字页的索引（同样以 0 起始）。第二个 <code>int</code> 填入的则是悬浮字行的索引。</p><div class="tip custom-block"><p class="custom-block-title">提示</p><p>你可以将 String 参数替换为 <code>org.bukkit.Material</code> 或 <code>org.bukkit.ItemStack</code> 示例。 这会按你提供的 Material / ItemStack 创建一个悬浮物品。 如果你传入的参数为后者，则某些 NBT 可能不会被加入。前者不包含任何 NBT 值。</p></div><h3 id="移除已有行" tabindex="-1">移除已有行 <a class="header-anchor" href="#移除已有行" aria-label="Permalink to &quot;移除已有行&quot;">​</a></h3><p>移除一行悬浮字也特别简单：</p><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DHAPI.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">removeHologramLine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Hologram, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>这会向悬浮字的第一页指定行号（以 0 起始）删除一行现存文本。</p><p>若要移除其他页的悬浮字行，请使用这个方法：</p><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DHAPI.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">removeHologramLine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Hologram, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>这将会移除指定页（第二页，以 0 起始的序号）指定行号（第三个参数）的悬浮字。</p><div class="tip custom-block"><p class="custom-block-title">提示</p><p>与 <code>List#remove</code> 方法相似，删除方法会返回一个 <code>HologramLine</code> 实例，其中含有你删除的内容，这样你就可以把它用在其他地方。</p></div><h2 id="编辑悬浮字页" tabindex="-1">编辑悬浮字页 <a class="header-anchor" href="#编辑悬浮字页" aria-label="Permalink to &quot;编辑悬浮字页&quot;">​</a></h2><p>DecentHolograms 提供了显示多页悬浮字的功能。<br> 当然也提供了编辑与管理这些内容的方法。</p><h3 id="添加新页" tabindex="-1">添加新页 <a class="header-anchor" href="#添加新页" aria-label="Permalink to &quot;添加新页&quot;">​</a></h3><p>向悬浮字添加新的一页非常简单，只需调用 <code>addHologramPage</code> 方法：</p><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DHAPI.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addHologramPage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Hologram);</span></span></code></pre></div><p>这会添加一页悬浮字，初始内容则是来自 config.yml 设置中的预留文本。</p><p>若要创建包含自定义内容的一页悬浮字，你需要使用这个方法：</p><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DHAPI.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addHologramPage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Hologram, List</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">String</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h3 id="插入新页" tabindex="-1">插入新页 <a class="header-anchor" href="#插入新页" aria-label="Permalink to &quot;插入新页&quot;">​</a></h3><p>悬浮字页可通过 <code>insertHologramPage</code> 方法插入：</p><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DHAPI.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">insertHologramPage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Hologram, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>这个方法将会在指定序号（以 0 起始）的悬浮字前加入一个新的 <code>HologramPage</code> 实例。被添加的 <code>HologramPage</code> 只会拥有 config.yml 设置中的预留文本。</p><p>当然也可以像上文那样为新加入的一页设定文本，方法如下：</p><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DHAPI.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">insertHologramPage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Hologram, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, List</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">String</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h3 id="删除已有页" tabindex="-1">删除已有页 <a class="header-anchor" href="#删除已有页" aria-label="Permalink to &quot;删除已有页&quot;">​</a></h3><p>移除一页悬浮字可以通过调用 <code>removeHologramPage</code> 实现：</p><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DHAPI.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">removeHologramPage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Hologram, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>这个方法会返回一个包含被移除内容的 <code>HologramPage</code> 实例，这样你就可以把它用在其他地方。<br> 提供的页码序号（以 0 起始）应该不小于 0，且小于页码总数，否则会返回 <code>null</code>。</p>`,93)]))}const g=s(l,[["render",n]]);export{c as __pageData,g as default};
