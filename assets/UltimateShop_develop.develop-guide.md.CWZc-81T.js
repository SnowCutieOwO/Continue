import{_ as i,c as a,o as e,b0 as t}from"./chunks/framework.w6NQj85O.js";const c=JSON.parse('{"title":"开发教程","description":"","frontmatter":{},"headers":[],"relativePath":"UltimateShop/develop.develop-guide.md","filePath":"UltimateShop/develop.develop-guide.md"}'),l={name:"UltimateShop/develop.develop-guide.md"};function n(h,s,p,k,d,o){return e(),a("div",null,s[0]||(s[0]=[t(`<h1 id="开发教程" tabindex="-1">开发教程 <a class="header-anchor" href="#开发教程" aria-label="Permalink to &quot;开发教程&quot;">​</a></h1><h2 id="获取商店对象" tabindex="-1">获取商店对象 <a class="header-anchor" href="#获取商店对象" aria-label="Permalink to &quot;获取商店对象&quot;">​</a></h2><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ConfigManager.configmanager.shopConfigs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(shopID);</span></span></code></pre></div><h2 id="获取物品对象" tabindex="-1">获取物品对象 <a class="header-anchor" href="#获取物品对象" aria-label="Permalink to &quot;获取物品对象&quot;">​</a></h2><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ObjectShop shop </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ConfigManager.configmanager.shopConfigs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(shopID);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (shop </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ObjectItem item </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> shop.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getProduct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;TEST&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">List&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ObjectItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; items </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> shop.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getProductList</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h2 id="发起购买物品请求" tabindex="-1">发起购买物品请求 <a class="header-anchor" href="#发起购买物品请求" aria-label="Permalink to &quot;发起购买物品请求&quot;">​</a></h2><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">BuyProductMethod.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">startBuy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Inventory inventory, String shop, String product, Player player, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> quick, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> test, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> multi);</span></span></code></pre></div><ul><li><code>inventory</code> 为 Bukkit 界面对象，对于玩家的界面，请使用 <code>player.getInventory()</code> 方法。</li><li><code>shop</code> 为商店 ID。</li><li><code>product</code> 为物品 ID。</li><li><code>quick</code> 表示是否在购买后发送消息（若在 <code>config.yml</code> 中启用 <code>send-message-after-buy</code> 选项，则消息仍会发送）。</li><li><code>test</code> 表示是否从玩家处取走物品，若你不知道玩家是否有足够的物品，请填入 <code>true</code>。</li><li><code>multi</code> 为单次交易次数，默认为 <code>1</code>。</li></ul><h2 id="发起出售物品请求" tabindex="-1">发起出售物品请求 <a class="header-anchor" href="#发起出售物品请求" aria-label="Permalink to &quot;发起出售物品请求&quot;">​</a></h2><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SellProductMethod.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">startSell</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Inventory inventory, String shop, String product, Player player, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> quick, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> test, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ableMaxSell, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> multi);</span></span></code></pre></div><ul><li><code>ableMaxSell</code> 表示在 <code>multi</code> 给定次数交易无法完成时，是否改为玩家能够出售的最大次数。适用于全部出售功能。</li></ul><h2 id="获取玩家缓存对象" tabindex="-1">获取玩家缓存对象 <a class="header-anchor" href="#获取玩家缓存对象" aria-label="Permalink to &quot;获取玩家缓存对象&quot;">​</a></h2><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CacheManager.cacheManager.playerCacheMap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(player);</span></span></code></pre></div><p>能够获取玩家的购买次数、出售次数等数据。</p><h2 id="获取服务器缓存对象" tabindex="-1">获取服务器缓存对象 <a class="header-anchor" href="#获取服务器缓存对象" aria-label="Permalink to &quot;获取服务器缓存对象&quot;">​</a></h2><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CacheManager.cacheManager.serverCache;</span></span></code></pre></div>`,16)]))}const E=i(l,[["render",n]]);export{c as __pageData,E as default};
